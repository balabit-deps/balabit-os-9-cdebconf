!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-add-udeb	debian/rules	/^	dh_makeshlibs -a --add-udeb=libdebconfclient0-udeb$/;"	m
ALIGN_CENTER_GLYPH	src/modules/frontend/gtk/align_text_renderer.h	44;"	d
ALIGN_CENTER_STRING	src/modules/frontend/gtk/align_text_renderer.h	43;"	d
ALIGN_RIGHT_GLYPH	src/modules/frontend/gtk/align_text_renderer.h	46;"	d
ALIGN_RIGHT_STRING	src/modules/frontend/gtk/align_text_renderer.h	45;"	d
ALIGN_TEXT_RENDERER	src/modules/frontend/gtk/align_text_renderer.h	50;"	d
ALIGN_TEXT_RENDERER_CLASS	src/modules/frontend/gtk/align_text_renderer.h	53;"	d
APPEND	src/strutl.c	836;"	d	file:
APPEND	src/strutl.c	854;"	d	file:
APPEND	src/strutl.c	881;"	d	file:
APPEND	src/strutl.c	900;"	d	file:
APT_EXTRACTTEMPLATES	src/dpkg-preconfigure.c	15;"	d	file:
ARCHITECTUREFIELD	src/dpkg-reconfigure.c	32;"	d	file:
ASSERT	src/common.h	28;"	d
ASSERT	src/common.h	31;"	d
ATTRIBUTE_SENTINEL	src/strutl.h	17;"	d
ATTRIBUTE_SENTINEL	src/strutl.h	19;"	d
AlignTextRenderer	src/modules/frontend/gtk/align_text_renderer.h	/^typedef struct _AlignTextRenderer AlignTextRenderer;$/;"	t	typeref:struct:_AlignTextRenderer
AlignTextRendererClass	src/modules/frontend/gtk/align_text_renderer.h	/^typedef struct _AlignTextRendererClass AlignTextRendererClass;$/;"	t	typeref:struct:_AlignTextRendererClass
BASE_IMAGE_PATH	src/modules/frontend/gtk/cdebconf_gtk.h	60;"	d
BASE_IMAGE_PATH	src/modules/frontend/gtk/cdebconf_gtk.h	64;"	d
BIN	src/test/Makefile	/^BIN=configtest dbtest$/;"	m
BUFFERSIZE	src/debconf-set-selections.c	153;"	d	file:
BUTTON_PADDING	src/modules/frontend/newt/cdebconf_newt.h	8;"	d
CAN_ALIGN	src/modules/frontend/gtk/cdebconf_gtk.h	86;"	d
CAN_CANCEL_PROGRESS	src/modules/frontend/gtk/cdebconf_gtk.h	78;"	d
CAN_GO_BACK	src/modules/frontend/gtk/cdebconf_gtk.h	82;"	d
CDEBCONF_DB_STACK	src/modules/db/stack/stack.h	3;"	d
CFGPREFIX	src/modules/db/mysql/mysql.c	51;"	d	file:
CHAR_CLEAR	src/modules/frontend/text/cdebconf_text.h	7;"	d
CHAR_GOBACK	src/modules/frontend/text/cdebconf_text.h	5;"	d
CHAR_HELP	src/modules/frontend/text/cdebconf_text.h	6;"	d
CHAR_NEXT	src/modules/frontend/text/cdebconf_text.h	9;"	d
CHAR_PREV	src/modules/frontend/text/cdebconf_text.h	8;"	d
CHECKARGC	src/commands.c	13;"	d	file:
CHOICE_MODEL_COLUMN_COUNT	src/modules/frontend/gtk/choice_model.h	/^    CHOICE_MODEL_COLUMN_COUNT$/;"	e	enum:__anon8
CHOICE_MODEL_INDEX	src/modules/frontend/gtk/choice_model.h	/^    CHOICE_MODEL_INDEX,$/;"	e	enum:__anon8
CHOICE_MODEL_SELECTED	src/modules/frontend/gtk/choice_model.h	/^    CHOICE_MODEL_SELECTED,$/;"	e	enum:__anon8
CHOICE_MODEL_TRANSLATED_VALUE	src/modules/frontend/gtk/choice_model.h	/^    CHOICE_MODEL_TRANSLATED_VALUE,$/;"	e	enum:__anon8
CHOICE_MODEL_VALUE	src/modules/frontend/gtk/choice_model.h	/^    CHOICE_MODEL_VALUE,$/;"	e	enum:__anon8
CHOMP	src/constants.h	37;"	d
CLEANMODULES	src/modules/db/Makefile	/^CLEANMODULES=$(addprefix clean-,$(MODULES))$/;"	m
CLEANMODULES	src/modules/frontend/Makefile	/^CLEANMODULES=$(addprefix clean-,$(MODULES))$/;"	m
CLEANSUBDIRS	src/modules/Makefile	/^CLEANSUBDIRS=$(addprefix clean-,$(SUBDIRS))$/;"	m
CMDSTATUS_BADPARAM	src/commands.h	15;"	d
CMDSTATUS_BADQUESTION	src/commands.h	14;"	d
CMDSTATUS_BADVERSION	src/commands.h	18;"	d
CMDSTATUS_ESCAPEDDATA	src/commands.h	13;"	d
CMDSTATUS_GOBACK	src/commands.h	19;"	d
CMDSTATUS_INPUTINVISIBLE	src/commands.h	17;"	d
CMDSTATUS_INTERNALERROR	src/commands.h	21;"	d
CMDSTATUS_PROGRESSCANCELLED	src/commands.h	20;"	d
CMDSTATUS_SUCCESS	src/commands.h	12;"	d
CMDSTATUS_SYNTAXERROR	src/commands.h	16;"	d
CMD_BADPARAM	src/debconfclient.h	/^	CMD_BADPARAM		= 15,$/;"	e	enum:__anon3
CMD_BADQUESTION	src/debconfclient.h	/^	CMD_BADQUESTION		= 10,$/;"	e	enum:__anon3
CMD_BADVERSION	src/debconfclient.h	/^	CMD_BADVERSION		= 30, \/\/ from debconf_version()$/;"	e	enum:__anon3
CMD_ESCAPEDDATA	src/debconfclient.h	/^	CMD_ESCAPEDDATA		= 1,$/;"	e	enum:__anon3
CMD_GOBACK	src/debconfclient.h	/^	CMD_GOBACK		= 30, \/\/ from debconf_go()$/;"	e	enum:__anon3
CMD_INPUTINVISIBLE	src/debconfclient.h	/^	CMD_INPUTINVISIBLE	= 30, \/\/ from debconf_input()$/;"	e	enum:__anon3
CMD_INTERNALERROR	src/debconfclient.h	/^	CMD_INTERNALERROR	= 100$/;"	e	enum:__anon3
CMD_PROGRESSCANCELLED	src/debconfclient.h	/^	CMD_PROGRESSCANCELLED	= 30, \/\/ from debconf_progress_{set,step,info}()$/;"	e	enum:__anon3
CMD_SUCCESS	src/debconfclient.h	/^	CMD_SUCCESS 		= 0,$/;"	e	enum:__anon3
CMD_SYNTAXERROR	src/debconfclient.h	/^	CMD_SYNTAXERROR		= 20,$/;"	e	enum:__anon3
COLOR_DESC	src/modules/frontend/ncurses/ncurses.c	18;"	d	file:
COLOR_FRAME	src/modules/frontend/ncurses/ncurses.c	16;"	d	file:
COLOR_QUERY	src/modules/frontend/ncurses/ncurses.c	17;"	d	file:
COLS	src/modules/frontend/slang/slang.c	56;"	d	file:
COLUMN_SPACING	src/modules/frontend/gtk/cdebconf_gtk.h	56;"	d
CONFFILE	debian/rules	/^CONFFILE=\/etc\/cdebconf.conf$/;"	m
DBC_DELETE	src/debconfclient.c	12;"	d	file:
DBDATA	src/modules/db/mysql/mysql.c	52;"	d	file:
DBDATA	src/modules/db/perldb/perldb.c	18;"	d	file:
DBH	src/modules/db/mysql/mysql.c	53;"	d	file:
DCF_CAPB_ALIGN	src/frontend.h	23;"	d
DCF_CAPB_BACKUP	src/frontend.h	21;"	d
DCF_CAPB_ESCAPE	src/frontend.h	24;"	d
DCF_CAPB_PROGRESSCANCEL	src/frontend.h	22;"	d
DC_AUTHNEEDED	src/constants.h	22;"	d
DC_GOBACK	src/constants.h	25;"	d
DC_LOADTEMPLATE_MERGE	src/database.h	21;"	d
DC_LOADTEMPLATE_NONE	src/database.h	20;"	d
DC_NO	src/constants.h	27;"	d
DC_NOTIMPL	src/constants.h	21;"	d
DC_NOTOK	src/constants.h	19;"	d
DC_NO_ANSWER	src/modules/frontend/gtk/cdebconf_gtk.h	121;"	d
DC_OK	src/constants.h	20;"	d
DC_QFLAG_SEEN	src/question.h	8;"	d
DC_REJECT	src/constants.h	23;"	d
DC_YES	src/constants.h	28;"	d
DEBCONF_MAX_CONFIGPATH_LEN	src/constants.h	17;"	d
DEBCONF_OLD_FD_BASE	src/debconfclient.h	69;"	d
DEBCONF_OLD_STDERR_FD	src/debconfclient.h	72;"	d
DEBCONF_OLD_STDIN_FD	src/debconfclient.h	70;"	d
DEBCONF_OLD_STDOUT_FD	src/debconfclient.h	71;"	d
DEBUGOPTFLAG	debian/rules	/^	DEBUGOPTFLAG=-g$/;"	m
DEBUG_CONFIGURE_OPT	debian/rules	/^	DEBUG_CONFIGURE_OPT=--with-debug=yes$/;"	m
DEBUG_CONFIGURE_OPT	debian/rules	/^DEBUG_CONFIGURE_OPT=$/;"	m
DEB_CFLAGS_MAINT_APPEND	debian/rules	/^	DEB_CFLAGS_MAINT_APPEND="$(DEBUGOPTFLAG) $(SIZEOPTFLAG) -fomit-frame-pointer" \\$/;"	m
DEB_CFLAGS_MAINT_APPEND	debian/rules	/^	DEB_CFLAGS_MAINT_APPEND="$(DEBUGOPTFLAG) $(SPEEDOPTFLAG)" \\$/;"	m
DEB_FRONTENDS	debian/rules	/^    DEB_FRONTENDS:=$(filter-out gtk,$(DEB_FRONTENDS))$/;"	m
DEB_FRONTENDS	debian/rules	/^DEB_FRONTENDS=passthrough text newt gtk$/;"	m
DEB_LDFLAGS_MAINT_APPEND	debian/rules	/^export DEB_LDFLAGS_MAINT_APPEND=-lpthread -Wl,--as-needed$/;"	m
DEFAULT_PADDING	src/modules/frontend/gtk/cdebconf_gtk.h	53;"	d
DELETE	src/constants.h	36;"	d
DELIMITER	src/configuration.c	8;"	d	file:
DESCRIPTION_MARGIN	src/modules/frontend/gtk/descriptions.c	122;"	d	file:
DESCRIPTION_VPADDING	src/modules/frontend/gtk/descriptions.c	124;"	d	file:
DIE	src/common.h	17;"	d
DIE	src/modules/db/perldb/perldb.c	3;"	d	file:
DIM	src/common.h	42;"	d
EXCEPTION	src/modules/frontend/corba/corba.c	28;"	d	file:
EXT_DESCRIPTION_VPADDING	src/modules/frontend/gtk/descriptions.c	165;"	d	file:
FILENAME	src/test/configtest.c	3;"	d	file:
GNOME_CFLAGS	src/modules/frontend/corba/Makefile	/^GNOME_CFLAGS = $(shell gnome-config --cflags gnome gnomeui gnorba gtk)$/;"	m
GNOME_LIBS	src/modules/frontend/corba/Makefile	/^GNOME_LIBS = $(shell gnome-config --libs gnome gnomeui gnorba gtk)$/;"	m
INFO	src/common.h	26;"	d
INFO	src/common.h	30;"	d
INFO_DEBUG	src/constants.h	32;"	d
INFO_ERROR	src/constants.h	30;"	d
INFO_VERBOSE	src/constants.h	33;"	d
INFO_WARN	src/constants.h	31;"	d
INITIAL_ROPE_SIZE	src/strutl.c	741;"	d	file:
INSTALLMODULES	src/modules/db/Makefile	/^INSTALLMODULES=$(addprefix install-,$(MODULES))$/;"	m
INSTALLMODULES	src/modules/frontend/Makefile	/^INSTALLMODULES=$(addprefix install-,$(MODULES))$/;"	m
INSTALLSUBDIRS	src/modules/Makefile	/^INSTALLSUBDIRS=$(addprefix install-,$(SUBDIRS))$/;"	m
ISEMPTY	src/modules/frontend/text/text.c	72;"	d	file:
ISEMPTY	src/modules/frontend/text/text.c	74;"	d	file:
IS_QUESTION_SINGLE	src/modules/frontend/gtk/cdebconf_gtk.h	90;"	d
IS_SPACE	src/debconf-set-selections.c	154;"	d	file:
IS_SPECIAL_QUESTION	src/modules/frontend/gtk/select_handlers.c	151;"	d	file:
IS_TEXT_ALIGN_RENDERER	src/modules/frontend/gtk/align_text_renderer.h	57;"	d
IS_TEXT_ALIGN_RENDERER_CLASS	src/modules/frontend/gtk/align_text_renderer.h	59;"	d
LDFLAGS	src/modules/frontend/corba/Makefile	/^LDFLAGS = $(MODLDFLAGS) $(GNOME_LIBS)$/;"	m
LIBDEBCONF	debian/rules	/^LIBDEBCONF=libdebconfclient0$/;"	m
LIBDEBCONFDEV	debian/rules	/^LIBDEBCONFDEV=libdebconfclient0-dev$/;"	m
LIBS	src/modules/db/mysql/Makefile	/^LIBS = -lmysqlclient$/;"	m
LIBS	src/modules/frontend/bogl/Makefile	/^LIBS=-lbogl$/;"	m
LINES	src/modules/frontend/slang/slang.c	55;"	d	file:
LOGO_DARK_IMAGE_PATH	src/modules/frontend/gtk/cdebconf_gtk.h	74;"	d
LOGO_IMAGE_PATH	src/modules/frontend/gtk/cdebconf_gtk.h	72;"	d
LOOKUP_FUNCTION	src/strutl.h	77;"	d
MAKE_UPPER	src/modules/frontend/text/text.c	69;"	d	file:
MAX	src/common.h	48;"	d
MIN	src/common.h	45;"	d
MIN_DECORATION_HEIGHT	src/modules/frontend/newt/newt.c	141;"	d	file:
MODCFLAGS	src/modules/db/perldb/Makefile	/^MODCFLAGS:= $(shell perl -MExtUtils::Embed -e ccopts)$/;"	m
MODLDFLAGS	src/modules/db/perldb/Makefile	/^MODLDFLAGS:= $(shell perl -MExtUtils::Embed -e ldopts)$/;"	m
MODULE	src/modules/db/http/Makefile	/^MODULE=http$/;"	m
MODULE	src/modules/db/mysql/Makefile	/^MODULE=mysql$/;"	m
MODULE	src/modules/db/perldb/Makefile	/^MODULE=perldb$/;"	m
MODULE	src/modules/db/stack/Makefile	/^MODULE=stack$/;"	m
MODULE	src/modules/db/textdb/Makefile	/^MODULE=textdb$/;"	m
MODULE	src/modules/frontend/bogl/Makefile	/^MODULE=bogl$/;"	m
MODULE	src/modules/frontend/corba/Makefile	/^MODULE=corba$/;"	m
MODULES	src/modules/db/Makefile	/^MODULES=$(DB_MODULES)$/;"	m
MODULES	src/modules/frontend/Makefile	/^MODULES=$(FRONTEND_MODULES)$/;"	m
NEW	src/constants.h	35;"	d
NOT_SET	src/debconf-set-selections.c	155;"	d	file:
OBJS	src/modules/db/http/Makefile	/^OBJS=http.opic$/;"	m
OBJS	src/modules/db/mysql/Makefile	/^OBJS=mysql.opic$/;"	m
OBJS	src/modules/db/perldb/Makefile	/^OBJS=perldb.opic$/;"	m
OBJS	src/modules/db/stack/Makefile	/^OBJS=stack.opic$/;"	m
OBJS	src/modules/db/textdb/Makefile	/^OBJS=textdb.opic$/;"	m
OBJS	src/modules/frontend/bogl/Makefile	/^OBJS=bogl.opic$/;"	m
OBJS	src/modules/frontend/corba/Makefile	/^OBJS = corba.opic$/;"	m
OBJS	src/test/Makefile	/^OBJS=$(subst .c,.o,$(wildcard *.c))$/;"	m
ORBIT_IDL	src/modules/frontend/corba/Makefile	/^ORBIT_IDL = \/usr\/bin\/orbit-idl$/;"	m
ORBIT_IDLFLAGS	src/modules/frontend/corba/Makefile	/^ORBIT_IDLFLAGS = --skeleton-impl$/;"	m
ORBIT_IDLTARGETS	src/modules/frontend/corba/Makefile	/^ORBIT_IDLTARGETS = $(PROJ)-stubs.c $(PROJ)-skels.c $(PROJ)-common.c $(PROJ).h$/;"	m
PACKAGEFIELD	src/dpkg-reconfigure.c	29;"	d	file:
PROGRESSBAR_HPADDING	src/modules/frontend/gtk/progress.c	55;"	d	file:
PROGRESSBAR_VPADDING	src/modules/frontend/gtk/progress.c	57;"	d	file:
PROGRESS_NONE	src/modules/frontend/text/text.c	77;"	d	file:
PROJ	src/modules/frontend/corba/Makefile	/^PROJ = dcf$/;"	m
PROJ_SERV	src/modules/frontend/corba/Makefile	/^PROJ_SERV = $(PROJ)-text$/;"	m
PROJ_SERVSRC	src/modules/frontend/corba/Makefile	/^PROJ_SERVSRC = $($(PROJ)-text:%=%.c)$/;"	m
PROP_0	src/modules/frontend/gtk/align_text_renderer.c	/^    PROP_0,$/;"	e	enum:__anon5	file:
PROP_TEXT	src/modules/frontend/gtk/align_text_renderer.c	/^    PROP_TEXT$/;"	e	enum:__anon5	file:
QUESTIONBOX_HPADDING	src/modules/frontend/gtk/cdebconf_gtk.h	49;"	d
QUESTIONBOX_VPADDING	src/modules/frontend/gtk/cdebconf_gtk.h	51;"	d
SAME_STRINGS	src/template.c	212;"	d	file:
SCREENSHOT_DIRECTORY	src/modules/frontend/gtk/screenshot.c	53;"	d	file:
SELINUXFLAG	debian/rules	/^    SELINUXFLAG=--disable-selinux$/;"	m
SELINUXFLAG	debian/rules	/^    SELINUXFLAG=--enable-selinux$/;"	m
SETMETHOD	src/database.c	176;"	d	file:
SETMETHOD	src/database.c	191;"	d	file:
SETMETHOD	src/database.c	485;"	d	file:
SETMETHOD	src/database.c	502;"	d	file:
SETMETHOD	src/frontend.c	381;"	d	file:
SETMETHOD	src/frontend.c	404;"	d	file:
SETTER_FUNCTION	src/modules/frontend/gtk/cdebconf_gtk.h	102;"	d
SIZEOPTFLAG	debian/rules	/^	SIZEOPTFLAG=$/;"	m
SIZEOPTFLAG	debian/rules	/^SIZEOPTFLAG=-Os$/;"	m
SOBJ	src/modules/db/http/Makefile	/^SOBJ=http.so$/;"	m
SOBJ	src/modules/db/mysql/Makefile	/^SOBJ=mysql.so$/;"	m
SOBJ	src/modules/db/perldb/Makefile	/^SOBJ=perldb.so$/;"	m
SOBJ	src/modules/db/stack/Makefile	/^SOBJ=stack.so$/;"	m
SOBJ	src/modules/db/textdb/Makefile	/^SOBJ=textdb.so$/;"	m
SOBJ	src/modules/frontend/bogl/Makefile	/^SOBJ=bogl.so$/;"	m
SOBJ	src/modules/frontend/corba/Makefile	/^SOBJ = corba.so$/;"	m
SOBJS	src/modules/db/Makefile	/^SOBJS=$(addsuffix .so,$(MODULES))$/;"	m
SOBJS	src/modules/frontend/Makefile	/^SOBJS=$(addsuffix .so,$(FRONTEND_MODULES))$/;"	m
SPEEDOPTFLAG	debian/rules	/^	SPEEDOPTFLAG=$/;"	m
SPEEDOPTFLAG	debian/rules	/^SPEEDOPTFLAG=-O2$/;"	m
STACK_SEEN_ADD	src/confmodule.h	/^        STACK_SEEN_ADD,       \/*  Add a question to the stack       *\/$/;"	e	enum:seen_action
STACK_SEEN_REMOVE	src/confmodule.h	/^        STACK_SEEN_REMOVE,    \/*  Remove a question from the stack  *\/$/;"	e	enum:seen_action
STACK_SEEN_SAVE	src/confmodule.h	/^        STACK_SEEN_SAVE       \/*  Questions are flagged as seen and$/;"	e	enum:seen_action
STATUSFIELD	src/dpkg-reconfigure.c	30;"	d	file:
STRALIGN_ALIGN_CENTER	src/strutl.h	81;"	d
STRALIGN_ALIGN_RIGHT	src/strutl.h	82;"	d
STRALIGN_TAB	src/strutl.h	80;"	d
STRCPY	src/common.h	41;"	d
STRDUP	src/common.h	38;"	d
STRDUP_NOTNULL	src/common.h	39;"	d
STRESCAPE_822	src/strutl.h	22;"	d
STRESCAPE_CAPB	src/strutl.h	24;"	d
STRESCAPE_QUOTE	src/strutl.h	23;"	d
STRLEN	src/common.h	40;"	d
SUBDIR	src/modules/db/modules.mak	/^SUBDIR   = src\/modules\/db\/$(MODULE)$/;"	m
SUBDIR	src/modules/frontend/modules.mak	/^SUBDIR   = src\/modules\/frontend\/$(MODULE)$/;"	m
SUBDIRS	src/modules/Makefile	/^SUBDIRS=db frontend$/;"	m
TEMPLATES	src/modules/frontend/Makefile	/^TEMPLATES = \\$/;"	m
TEXT_ALIGN_RENDERER_GET_CLASS	src/modules/frontend/gtk/align_text_renderer.h	61;"	d
TEXT_PADDING	src/modules/frontend/newt/cdebconf_newt.h	6;"	d
TITLE_PADDING	src/modules/frontend/newt/newt.c	133;"	d	file:
TYPE_ALIGN_TEXT_RENDERER	src/modules/frontend/gtk/align_text_renderer.h	48;"	d
UDEB_FRONTENDS	debian/rules	/^    UDEB_FRONTENDS:=$(filter-out gtk,$(UDEB_FRONTENDS))$/;"	m
UDEB_FRONTENDS	debian/rules	/^UDEB_FRONTENDS=passthrough text newt gtk$/;"	m
UIDATA	src/modules/frontend/corba/corba.c	48;"	d	file:
UIDATA	src/modules/frontend/ncurses/ncurses.c	19;"	d	file:
UIDATA	src/modules/frontend/slang/slang.c	57;"	d	file:
VAR_SIZE	src/strutl.c	742;"	d	file:
VERSIONFIELD	src/dpkg-reconfigure.c	31;"	d	file:
WIN_DESC	src/modules/frontend/ncurses/ncurses.c	15;"	d	file:
WIN_DESC	src/modules/frontend/slang/slang.c	53;"	d	file:
WIN_PROGRESS	src/modules/frontend/slang/slang.c	54;"	d	file:
WIN_QUERY	src/modules/frontend/ncurses/ncurses.c	14;"	d	file:
WIN_QUERY	src/modules/frontend/slang/slang.c	52;"	d	file:
XGETTEXT	src/modules/frontend/Makefile	/^XGETTEXT = xgettext$/;"	m
_	src/frontend.h	12;"	d
_	src/frontend.h	13;"	d
_ALIGN_TEXT_RENDERER_H_	src/modules/frontend/gtk/align_text_renderer.h	39;"	d
_AlignTextRenderer	src/modules/frontend/gtk/align_text_renderer.h	/^struct _AlignTextRenderer {$/;"	s
_AlignTextRendererClass	src/modules/frontend/gtk/align_text_renderer.h	/^struct _AlignTextRendererClass {$/;"	s
_CDEBCONF_COMMON_H_	src/common.h	8;"	d
_CDEBCONF_CONSTANTS_H_	src/constants.h	11;"	d
_CDEBCONF_GTK_H_	src/modules/frontend/gtk/cdebconf_gtk.h	41;"	d
_CDEBCONF_MYSQL_H_	src/modules/db/mysql/mysql.h	2;"	d
_CDEBCONF_NEWT_H_	src/modules/frontend/newt/cdebconf_newt.h	3;"	d
_CDEBCONF_TEXT_H_	src/modules/frontend/text/cdebconf_text.h	3;"	d
_CHOICE_MODEL_H_	src/modules/frontend/gtk/choice_model.h	40;"	d
_COMMANDS_H_	src/commands.h	8;"	d
_CONFIGURATION_H_	src/configuration.h	8;"	d
_CONFMODULE_H_	src/confmodule.h	8;"	d
_DATABASE_H_	src/database.h	8;"	d
_DEBCONFCLIENT_H_	src/debconfclient.h	9;"	d
_DEBUG_H_	src/debug.h	6;"	d
_DESCRIPTIONS_H_	src/modules/frontend/gtk/descriptions.h	40;"	d
_DI_H_	src/modules/frontend/gtk/di.h	39;"	d
_FE_DATA_H	src/modules/frontend/gtk/fe_data.h	39;"	d
_FRONTEND_H_	src/frontend.h	6;"	d
_FRONTEND_NCURSES_H_	src/modules/frontend/ncurses/ncurses_fe.h	2;"	d
_GO_H_	src/modules/frontend/gtk/go.h	39;"	d
_HANDLERS_H_	src/modules/frontend/gtk/handlers.h	39;"	d
_HTTP_H_	src/modules/db/http/http.h	2;"	d
_PERLDB_H_	src/modules/db/perldb/perldb.h	2;"	d
_PLUGIN_H_	src/plugin.h	6;"	d
_PRIORITY_H_	src/priority.h	6;"	d
_PROGRESS_H_	src/modules/frontend/gtk/progress.h	39;"	d
_QUESTION_H_	src/question.h	6;"	d
_RFC822DB_H_	src/modules/db/rfc822db/rfc822db.h	2;"	d
_RFC822_H_	src/rfc822.h	2;"	d
_SCREENSHOT_H_	src/modules/frontend/gtk/screenshot.h	39;"	d
_SELECT_HANDLERS_H_	src/modules/frontend/gtk/select_handlers.h	39;"	d
_SLANG_H_	src/modules/frontend/slang/slang_fe.h	2;"	d
_STRUTL_H_	src/strutl.h	7;"	d
_TEMPLATE_H_	src/template.h	6;"	d
_TEXTDB_H_	src/modules/db/textdb/textdb.h	2;"	d
_UI_H_	src/modules/frontend/gtk/ui.h	40;"	d
_confmodule_cloexec	src/confmodule.c	/^static int _confmodule_cloexec(int fd)$/;"	f	file:
_confmodule_process	src/confmodule.c	/^static char *_confmodule_process(struct confmodule *mod, char *in)$/;"	f	file:
accept	src/database.h	/^    int (*accept)(struct question_db *, const char *name, const char *type);$/;"	m	struct:question_db_module
accept	src/database.h	/^    int (*accept)(struct template_db *, const char *name, const char *type);$/;"	m	struct:template_db_module
action_box	src/modules/frontend/gtk/fe_data.h	/^    GtkWidget * action_box;$/;"	m	struct:frontend_data
add	src/frontend.h	/^    int (*add)(struct frontend *, struct question *q);$/;"	m	struct:frontend_module
add_description	src/modules/frontend/gtk/descriptions.c	/^static void add_description(struct frontend * fe, struct question * question,$/;"	f	file:
add_extended_description	src/modules/frontend/gtk/descriptions.c	/^static void add_extended_description(struct frontend * fe,$/;"	f	file:
add_icon	src/modules/frontend/gtk/descriptions.c	/^static void add_icon(struct question * question, GtkWidget * container)$/;"	f	file:
add_noninteractive	src/frontend.h	/^    int (*add_noninteractive)(struct frontend *, struct question *q);$/;"	m	struct:frontend_module
add_questions_debconf	src/debconf-loadtemplate.c	/^static void add_questions_debconf(int argc, char **argv)$/;"	f	file:
adjust_data	src/modules/frontend/gtk/select_handlers.c	/^struct adjust_data {$/;"	s	file:
adjust_tabs	src/modules/frontend/gtk/select_handlers.c	/^static void adjust_tabs(GtkWidget * widget, PangoTabArray * tab_array,$/;"	f	file:
adjust_tabs_for_node	src/modules/frontend/gtk/select_handlers.c	/^static gboolean adjust_tabs_for_node(GtkTreeModel * model, GtkTreePath * path,$/;"	f	file:
align_center_glyph	src/modules/frontend/gtk/align_text_renderer.h	/^    PangoGlyph align_center_glyph;$/;"	m	struct:_AlignTextRenderer
align_right_glyph	src/modules/frontend/gtk/align_text_renderer.h	/^    PangoGlyph align_right_glyph;$/;"	m	struct:_AlignTextRenderer
align_text_renderer_finalize	src/modules/frontend/gtk/align_text_renderer.c	/^static void align_text_renderer_finalize(GObject * object)$/;"	f	file:
align_text_renderer_get_property	src/modules/frontend/gtk/align_text_renderer.c	/^static void align_text_renderer_get_property($/;"	f	file:
align_text_renderer_get_size	src/modules/frontend/gtk/align_text_renderer.c	/^static void align_text_renderer_get_size($/;"	f	file:
align_text_renderer_render	src/modules/frontend/gtk/align_text_renderer.c	/^static void align_text_renderer_render($/;"	f	file:
align_text_renderer_set_property	src/modules/frontend/gtk/align_text_renderer.c	/^static void align_text_renderer_set_property($/;"	f	file:
allow_i18n	src/template.c	/^static bool allow_i18n(void)$/;"	f	file:
answer	src/modules/frontend/gtk/fe_data.h	/^    int answer;$/;"	m	struct:frontend_data
answer_cond	src/modules/frontend/gtk/fe_data.h	/^    GCond answer_cond;$/;"	m	struct:frontend_data
answer_mutex	src/modules/frontend/gtk/fe_data.h	/^    GMutex answer_mutex;$/;"	m	struct:frontend_data
apt	src/dpkg-preconfigure.c	/^static int apt = 0;$/;"	v	file:
askquestion	src/test/test.config	/^askquestion()$/;"	f
backed_up	src/confmodule.h	/^	int backed_up;$/;"	m	struct:confmodule
bogl_go	src/modules/frontend/bogl/bogl.c	/^static int bogl_go(struct frontend *ui)$/;"	f	file:
bogl_handler_boolean	src/modules/frontend/bogl/bogl.c	/^int bogl_handler_boolean(struct frontend *ui, struct question *q)$/;"	f
bogl_handler_multiselect	src/modules/frontend/bogl/bogl.c	/^int bogl_handler_multiselect(struct frontend *ui, struct question *q)$/;"	f
bogl_handler_note	src/modules/frontend/bogl/bogl.c	/^int bogl_handler_note(struct frontend *ui, struct question *q)$/;"	f
bogl_handler_select	src/modules/frontend/bogl/bogl.c	/^int bogl_handler_select(struct frontend *ui, struct question *q)$/;"	f
bogl_handler_string	src/modules/frontend/bogl/bogl.c	/^int bogl_handler_string(struct frontend *ui, struct question *q)$/;"	f
bogl_initialize	src/modules/frontend/bogl/bogl.c	/^static int bogl_initialize(struct frontend *ui, struct configuration *cfg)$/;"	f	file:
bogl_shutdown	src/modules/frontend/bogl/bogl.c	/^static int bogl_shutdown(struct frontend *ui)$/;"	f	file:
border	src/modules/frontend/slang/slang_fe.h	/^	int border;$/;"	m	struct:slwindow
buffer	src/dpkg-preconfigure.c	/^    char *buffer;$/;"	m	struct:package	file:
button_text	src/modules/frontend/slang/slang.c	/^static char *button_text(struct frontend *obj, const char *template, char *fallback)$/;"	f	file:
cache_cur_lang	src/template.c	/^static char *cache_cur_lang = NULL;$/;"	v	file:
cache_list_lang	src/template.c	/^struct cache_list_lang$/;"	s	file:
cache_list_lang_ptr	src/template.c	/^struct cache_list_lang *cache_list_lang_ptr = NULL;$/;"	v	typeref:struct:cache_list_lang
call_question_handlers	src/modules/frontend/gtk/go.c	/^static int call_question_handlers(struct frontend * fe,$/;"	f	file:
call_setters	src/modules/frontend/gtk/go.c	/^static void call_setters(struct frontend * fe)$/;"	f	file:
can_align	src/frontend.h	/^    bool (*can_align)(struct frontend *, struct question *);$/;"	m	struct:frontend_module
can_cancel_progress	src/frontend.h	/^    bool (*can_cancel_progress)(struct frontend *);$/;"	m	struct:frontend_module
can_go_back	src/frontend.h	/^    bool (*can_go_back)(struct frontend *, struct question *);$/;"	m	struct:frontend_module
can_go_back	src/modules/frontend/ncurses/ncurses.c	/^static int can_go_back(struct frontend *ui)$/;"	f	file:
can_go_forward	src/frontend.h	/^    bool (*can_go_forward)(struct frontend *, struct question *);$/;"	m	struct:frontend_module
can_go_forward	src/modules/frontend/ncurses/ncurses.c	/^static int can_go_forward(struct frontend *ui)$/;"	f	file:
cancel_button	src/modules/frontend/gtk/progress.c	/^    GtkWidget * cancel_button;$/;"	m	struct:progress_data	file:
cancel_text	src/modules/frontend/newt/newt.c	/^cancel_text(struct frontend *obj)$/;"	f	file:
capability	src/frontend.h	/^    unsigned long capability;$/;"	m	struct:frontend
capb	src/frontend.h	/^    char *capb;$/;"	m	struct:frontend
cdebconf_gtk_add_button	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_add_button(struct frontend * fe, GtkWidget * button)$/;"	f
cdebconf_gtk_add_common_layout	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_add_common_layout(struct frontend * fe,$/;"	f
cdebconf_gtk_add_global_key_handler	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_add_global_key_handler(struct frontend * fe,$/;"	f
cdebconf_gtk_align_text_renderer_class_init	src/modules/frontend/gtk/align_text_renderer.c	/^static void cdebconf_gtk_align_text_renderer_class_init($/;"	f	file:
cdebconf_gtk_align_text_renderer_get_type	src/modules/frontend/gtk/align_text_renderer.c	/^GType cdebconf_gtk_align_text_renderer_get_type(void)$/;"	f
cdebconf_gtk_align_text_renderer_init	src/modules/frontend/gtk/align_text_renderer.c	/^static void cdebconf_gtk_align_text_renderer_init(AlignTextRenderer * renderer,$/;"	f	file:
cdebconf_gtk_align_text_renderer_new	src/modules/frontend/gtk/align_text_renderer.c	/^GtkCellRenderer * cdebconf_gtk_align_text_renderer_new(void)$/;"	f
cdebconf_gtk_align_text_renderer_parent_class	src/modules/frontend/gtk/align_text_renderer.c	/^static gpointer cdebconf_gtk_align_text_renderer_parent_class;$/;"	v	file:
cdebconf_gtk_align_text_renderer_set_tab_array	src/modules/frontend/gtk/align_text_renderer.c	/^void cdebconf_gtk_align_text_renderer_set_tab_array($/;"	f
cdebconf_gtk_callback_widget_destroy	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_callback_widget_destroy(GtkWidget *widget, gpointer data)$/;"	f
cdebconf_gtk_can_align	src/modules/frontend/gtk/cdebconf_gtk.c	/^static bool cdebconf_gtk_can_align(struct frontend * fe,$/;"	f	file:
cdebconf_gtk_can_cancel_progress	src/modules/frontend/gtk/progress.c	/^bool cdebconf_gtk_can_cancel_progress(struct frontend * fe)$/;"	f
cdebconf_gtk_can_go_back	src/modules/frontend/gtk/cdebconf_gtk.c	/^static bool cdebconf_gtk_can_go_back(struct frontend * fe,$/;"	f	file:
cdebconf_gtk_center_widget	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_center_widget(GtkWidget ** widget, guint horizontal_padding,$/;"	f
cdebconf_gtk_choice_model_create	src/modules/frontend/gtk/choice_model.c	/^GtkTreeModel * cdebconf_gtk_choice_model_create(struct frontend * fe,$/;"	f
cdebconf_gtk_choice_model_create_full	src/modules/frontend/gtk/choice_model.c	/^GtkTreeModel * cdebconf_gtk_choice_model_create_full($/;"	f
cdebconf_gtk_choice_model_find_value	src/modules/frontend/gtk/choice_model.c	/^GtkTreePath * cdebconf_gtk_choice_model_find_value(GtkTreeModel * model,$/;"	f
cdebconf_gtk_choice_model_get_first_selected	src/modules/frontend/gtk/choice_model.c	/^GtkTreePath * cdebconf_gtk_choice_model_get_first_selected($/;"	f
cdebconf_gtk_choice_model_get_length	src/modules/frontend/gtk/choice_model.c	/^guint cdebconf_gtk_choice_model_get_length(GtkTreeModel * model)$/;"	f
cdebconf_gtk_choice_model_set	src/modules/frontend/gtk/choice_model.c	/^void cdebconf_gtk_choice_model_set(GtkTreeModel * model,$/;"	f
cdebconf_gtk_create_continue_button	src/modules/frontend/gtk/go.c	/^GtkWidget * cdebconf_gtk_create_continue_button(struct frontend * fe)$/;"	f
cdebconf_gtk_create_description	src/modules/frontend/gtk/descriptions.c	/^GtkWidget * cdebconf_gtk_create_description(struct frontend * fe,$/;"	f
cdebconf_gtk_create_main_window	src/modules/frontend/gtk/ui.c	/^gboolean cdebconf_gtk_create_main_window(struct frontend * fe)$/;"	f
cdebconf_gtk_create_screenshot_button	src/modules/frontend/gtk/screenshot.c	/^GtkWidget * cdebconf_gtk_create_screenshot_button(struct frontend * fe)$/;"	f
cdebconf_gtk_destroy_main_window	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_destroy_main_window(struct frontend * fe)$/;"	f
cdebconf_gtk_di_run_dialog	src/modules/frontend/gtk/di.c	/^void cdebconf_gtk_di_run_dialog(struct frontend * fe)$/;"	f
cdebconf_gtk_di_setup	src/modules/frontend/gtk/di.c	/^gboolean cdebconf_gtk_di_setup(struct frontend * fe)$/;"	f
cdebconf_gtk_di_shutdown	src/modules/frontend/gtk/di.c	/^void cdebconf_gtk_di_shutdown(struct frontend * fe)$/;"	f
cdebconf_gtk_empty_target_box	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_empty_target_box(struct frontend * fe)$/;"	f
cdebconf_gtk_force_quit	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_force_quit(struct frontend * fe)$/;"	f
cdebconf_gtk_get_answer	src/modules/frontend/gtk/cdebconf_gtk.c	/^int cdebconf_gtk_get_answer(struct frontend * fe)$/;"	f
cdebconf_gtk_get_text	src/modules/frontend/gtk/cdebconf_gtk.c	/^char * cdebconf_gtk_get_text(struct frontend * fe, const char * template,$/;"	f
cdebconf_gtk_get_text_width	src/modules/frontend/gtk/ui.c	/^gint cdebconf_gtk_get_text_width(GtkWidget * widget, gchar * text)$/;"	f
cdebconf_gtk_go	src/modules/frontend/gtk/go.c	/^int cdebconf_gtk_go(struct frontend * fe)$/;"	f
cdebconf_gtk_handle_boolean	src/modules/frontend/gtk/handlers.c	/^int cdebconf_gtk_handle_boolean(struct frontend * fe,$/;"	f
cdebconf_gtk_handle_multiselect	src/modules/frontend/gtk/select_handlers.c	/^int cdebconf_gtk_handle_multiselect(struct frontend * fe,$/;"	f
cdebconf_gtk_handle_note	src/modules/frontend/gtk/handlers.c	/^int cdebconf_gtk_handle_note(struct frontend * fe, struct question * question,$/;"	f
cdebconf_gtk_handle_password	src/modules/frontend/gtk/handlers.c	/^int cdebconf_gtk_handle_password(struct frontend * fe,$/;"	f
cdebconf_gtk_handle_select	src/modules/frontend/gtk/select_handlers.c	/^int cdebconf_gtk_handle_select(struct frontend * fe,$/;"	f
cdebconf_gtk_handle_string	src/modules/frontend/gtk/handlers.c	/^int cdebconf_gtk_handle_string(struct frontend * fe,$/;"	f
cdebconf_gtk_handle_text	src/modules/frontend/gtk/handlers.c	/^int cdebconf_gtk_handle_text(struct frontend * fe, struct question * question,$/;"	f
cdebconf_gtk_handler	src/modules/frontend/gtk/cdebconf_gtk.h	/^typedef int (* cdebconf_gtk_handler)(struct frontend * fe,$/;"	t
cdebconf_gtk_help	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_help(struct frontend * fe)$/;"	f
cdebconf_gtk_hide_progress	src/modules/frontend/gtk/progress.c	/^void cdebconf_gtk_hide_progress(struct frontend * fe)$/;"	f
cdebconf_gtk_hide_target_box	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_hide_target_box(struct frontend * fe)$/;"	f
cdebconf_gtk_initialize	src/modules/frontend/gtk/cdebconf_gtk.c	/^static int cdebconf_gtk_initialize(struct frontend * fe,$/;"	f	file:
cdebconf_gtk_is_first_question	src/modules/frontend/gtk/cdebconf_gtk.c	/^gboolean cdebconf_gtk_is_first_question(struct question * question)$/;"	f
cdebconf_gtk_lookup_directive	src/modules/frontend/gtk/cdebconf_gtk.c	/^static const char * cdebconf_gtk_lookup_directive(struct frontend * fe,$/;"	f	file:
cdebconf_gtk_progress_info	src/modules/frontend/gtk/progress.c	/^int cdebconf_gtk_progress_info(struct frontend * fe, struct question * info)$/;"	f
cdebconf_gtk_progress_set	src/modules/frontend/gtk/progress.c	/^int cdebconf_gtk_progress_set(struct frontend * fe, int val)$/;"	f
cdebconf_gtk_progress_start	src/modules/frontend/gtk/progress.c	/^void cdebconf_gtk_progress_start(struct frontend * fe, int min, int max,$/;"	f
cdebconf_gtk_progress_stop	src/modules/frontend/gtk/progress.c	/^void cdebconf_gtk_progress_stop(struct frontend * fe)$/;"	f
cdebconf_gtk_register_setter	src/modules/frontend/gtk/go.c	/^void cdebconf_gtk_register_setter(struct frontend * fe, setter_function func,$/;"	f
cdebconf_gtk_run_message_dialog	src/modules/frontend/gtk/ui.c	/^gboolean cdebconf_gtk_run_message_dialog(struct frontend * fe,$/;"	f
cdebconf_gtk_set_answer	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_set_answer(struct frontend * fe, int answer)$/;"	f
cdebconf_gtk_set_answer_goback	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_set_answer_goback(struct frontend * fe)$/;"	f
cdebconf_gtk_set_answer_notok	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_set_answer_notok(struct frontend * fe)$/;"	f
cdebconf_gtk_set_answer_ok	src/modules/frontend/gtk/cdebconf_gtk.c	/^void cdebconf_gtk_set_answer_ok(struct frontend * fe)$/;"	f
cdebconf_gtk_set_button_secondary	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_set_button_secondary(struct frontend * fe,$/;"	f
cdebconf_gtk_set_buttons_sensitive	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_set_buttons_sensitive(struct frontend * fe,$/;"	f
cdebconf_gtk_set_title	src/modules/frontend/gtk/cdebconf_gtk.c	/^static void cdebconf_gtk_set_title(struct frontend * fe, const char * title)$/;"	f	file:
cdebconf_gtk_show_buttons	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_show_buttons(struct frontend * fe)$/;"	f
cdebconf_gtk_show_progress	src/modules/frontend/gtk/progress.c	/^void cdebconf_gtk_show_progress(struct frontend * fe)$/;"	f
cdebconf_gtk_show_target_box	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_show_target_box(struct frontend * fe)$/;"	f
cdebconf_gtk_shutdown	src/modules/frontend/gtk/cdebconf_gtk.c	/^static int cdebconf_gtk_shutdown(struct frontend * fe)$/;"	f	file:
cdebconf_gtk_update_frontend_title	src/modules/frontend/gtk/ui.c	/^void cdebconf_gtk_update_frontend_title(struct frontend * fe)$/;"	f
cdebconf_newt_create_form	src/modules/frontend/newt/newt.c	/^cdebconf_newt_create_form(newtComponent scrollbar)$/;"	f
cdebconf_newt_create_window	src/modules/frontend/newt/newt.c	/^cdebconf_newt_create_window(const int width, const int height, const char *title, const char *priority)$/;"	f
cdebconf_newt_get_progress_info	src/modules/frontend/newt/newt.c	/^cdebconf_newt_get_progress_info(struct frontend *obj)$/;"	f
cdebconf_newt_get_text_height	src/modules/frontend/newt/newt.c	/^cdebconf_newt_get_text_height(const char *text, int win_width)$/;"	f
cdebconf_newt_get_text_width	src/modules/frontend/newt/newt.c	/^cdebconf_newt_get_text_width(const char *text)$/;"	f
cdebconf_newt_setup	src/modules/frontend/newt/newt.c	/^cdebconf_newt_setup(void)$/;"	f
check_fd	src/confmodule.c	/^static inline void check_fd(int fd, int newfd, bool old[])$/;"	f	file:
checkandruntriggers	src/dpkg-reconfigure.c	/^static void checkandruntriggers(struct package_name *pre)$/;"	f	file:
checkbox_callback	src/modules/frontend/newt/newt.c	/^static void checkbox_callback(newtComponent co, void * data)$/;"	f	file:
checkbox_toggled	src/modules/frontend/gtk/handlers.c	/^static void checkbox_toggled(GtkToggleButton *togglebutton, gpointer user_data)$/;"	f	file:
checkonly	src/debconf-set-selections.c	/^static int checkonly = 0;$/;"	v	file:
child	src/configuration.h	/^	struct configitem *parent, *child, *next;$/;"	m	struct:configitem	typeref:struct:configitem::
child_iterator	src/modules/db/stack/stack.h	/^  void *child_iterator;$/;"	m	struct:question_stack_iterator
child_iterator	src/modules/db/stack/stack.h	/^  void *child_iterator;$/;"	m	struct:template_stack_iterator
choices	src/modules/frontend/text/text.c	/^	char **choices;$/;"	m	struct:choices	file:
choices	src/modules/frontend/text/text.c	/^struct choices {$/;"	s	file:
choices	src/template.h	/^	char *choices;$/;"	m	struct:template_l10n_fields
choices_delete	src/modules/frontend/text/text.c	/^static void choices_delete(struct choices *c)$/;"	f	file:
choices_get	src/modules/frontend/text/text.c	/^static struct choices *choices_get(struct frontend *obj, struct question *q)$/;"	f	file:
choices_translated	src/modules/frontend/text/text.c	/^	char **choices_translated;$/;"	m	struct:choices	file:
cleanup	src/debconf-communicate.c	/^static void cleanup()$/;"	f	file:
cleanup	src/debconf.c	/^static void cleanup()$/;"	f	file:
cleanup	src/dpkg-reconfigure.c	/^static void cleanup(void)$/;"	f	file:
clear	src/frontend.h	/^    void (*clear)(struct frontend *);$/;"	m	struct:frontend_module
closure_gtk_tree_row_reference_free	src/modules/frontend/gtk/select_handlers.c	/^static void closure_gtk_tree_row_reference_free(GtkTreeRowReference *row_reference,$/;"	f	file:
cmdstatus_t	src/debconfclient.h	/^} cmdstatus_t;$/;"	t	typeref:enum:__anon3
command	src/commands.h	/^    const char *command;$/;"	m	struct:__anon10
command	src/debconfclient.h	/^	int (*command)(struct debconfclient *client, const char *cmd, ...)$/;"	m	struct:debconfclient
command_beginblock	src/commands.c	/^command_beginblock(struct confmodule *mod, char *arg)$/;"	f
command_capb	src/commands.c	/^command_capb(struct confmodule *mod, char *arg)$/;"	f
command_clear	src/commands.c	/^command_clear(struct confmodule *mod, char *arg)$/;"	f
command_data	src/commands.c	/^command_data(struct confmodule *mod, char *arg)$/;"	f
command_endblock	src/commands.c	/^command_endblock(struct confmodule *mod, char *arg)$/;"	f
command_exist	src/commands.c	/^command_exist(struct confmodule *mod, char *arg)$/;"	f
command_fget	src/commands.c	/^command_fget(struct confmodule *mod, char *arg)$/;"	f
command_fset	src/commands.c	/^command_fset(struct confmodule *mod, char *arg)$/;"	f
command_function_t	src/commands.h	/^typedef char *(*command_function_t)(struct confmodule *mod, char *arg);$/;"	t
command_get	src/commands.c	/^command_get(struct confmodule *mod, char *arg)$/;"	f
command_go	src/commands.c	/^command_go(struct confmodule *mod, char *arg)$/;"	f
command_info	src/commands.c	/^command_info(struct confmodule *mod, char *arg)$/;"	f
command_input	src/commands.c	/^command_input(struct confmodule *mod, char *arg)$/;"	f
command_metaget	src/commands.c	/^command_metaget(struct confmodule *mod, char *arg)$/;"	f
command_progress	src/commands.c	/^command_progress(struct confmodule *mod, char *arg)$/;"	f
command_purge	src/commands.c	/^command_purge(struct confmodule *mod, char *arg)$/;"	f
command_register	src/commands.c	/^command_register(struct confmodule *mod, char *arg)$/;"	f
command_reset	src/commands.c	/^command_reset(struct confmodule *mod, char *arg)$/;"	f
command_set	src/commands.c	/^command_set(struct confmodule *mod, char *arg)$/;"	f
command_settitle	src/commands.c	/^command_settitle(struct confmodule *mod, char *arg)$/;"	f
command_stop	src/commands.c	/^command_stop(struct confmodule *mod, char *arg)$/;"	f
command_subst	src/commands.c	/^command_subst(struct confmodule *mod, char *arg)$/;"	f
command_title	src/commands.c	/^command_title(struct confmodule *mod, char *arg)$/;"	f
command_unregister	src/commands.c	/^command_unregister(struct confmodule *mod, char *arg)$/;"	f
command_version	src/commands.c	/^command_version(struct confmodule *mod, char *arg)$/;"	f
command_x_loadtemplatefile	src/commands.c	/^command_x_loadtemplatefile(struct confmodule *mod, char *arg)$/;"	f
command_x_save	src/commands.c	/^char *command_x_save(struct confmodule *mod, char *arg)$/;"	f
commandf	src/debconfclient.h	/^	int (*commandf)(struct debconfclient *client, const char *cmd, ...)$/;"	m	struct:debconfclient
commands	src/confmodule.c	/^static commands_t commands[] = {$/;"	v	file:
commands_t	src/commands.h	/^} commands_t;$/;"	t	typeref:struct:__anon10
common_accept	src/database.c	/^static int common_accept(const char *type,$/;"	f	file:
communicate	src/confmodule.h	/^	int (*communicate)(struct confmodule *mod);$/;"	m	struct:confmodule
config	src/confmodule.h	/^	struct configuration *config;$/;"	m	struct:confmodule	typeref:struct:confmodule::configuration
config	src/database.h	/^    struct configuration *config;$/;"	m	struct:question_db	typeref:struct:question_db::configuration
config	src/database.h	/^    struct configuration *config;$/;"	m	struct:template_db	typeref:struct:template_db::configuration
config	src/debconf-communicate.c	/^static struct configuration *config = NULL;$/;"	v	typeref:struct:configuration	file:
config	src/debconf.c	/^static struct configuration *config = NULL;$/;"	v	typeref:struct:configuration	file:
config	src/frontend.h	/^    struct configuration *config;$/;"	m	struct:frontend	typeref:struct:frontend::configuration
config_delete	src/configuration.c	/^void config_delete(struct configuration *config)$/;"	f
config_dump	src/configuration.c	/^static void config_dump(struct configuration *cfg)$/;"	f	file:
config_exists	src/configuration.c	/^static int config_exists(struct configuration *cfg, const char *tag)$/;"	f	file:
config_fulltag	src/configuration.c	/^void config_fulltag(const struct configitem *top, $/;"	f
config_get	src/configuration.c	/^static const char *config_get(struct configuration *cfg, const char *tag, $/;"	f	file:
config_geti	src/configuration.c	/^static int config_geti(struct configuration *cfg, const char *tag, $/;"	f	file:
config_lookup	src/configuration.c	/^static struct configitem *config_lookup(struct configuration *config, $/;"	f	file:
config_lookuphlp	src/configuration.c	/^static struct configitem *config_lookuphlp(struct configitem *head, $/;"	f	file:
config_new	src/configuration.c	/^struct configuration *config_new(void)$/;"	f
config_read	src/configuration.c	/^static int config_read(struct configuration *cfg, const char *filename)$/;"	f	file:
config_set	src/configuration.c	/^static void config_set(struct configuration *cfg, const char *tag,$/;"	f	file:
config_seti	src/configuration.c	/^static void config_seti(struct configuration *cfg, const char *tag,$/;"	f	file:
config_tree	src/configuration.c	/^static struct configitem *config_tree(struct configuration *cfg, const char *tag)$/;"	f	file:
configdb	src/debconf-get-selections.c	/^static const char *configdb = NULL;$/;"	v	file:
configfile	src/dpkg-preconfigure.c	/^    char *configfile;$/;"	m	struct:package	file:
configitem	src/configuration.h	/^struct configitem {$/;"	s
configpath	src/database.h	/^    char configpath[DEBCONF_MAX_CONFIGPATH_LEN];$/;"	m	struct:question_db
configpath	src/database.h	/^    char configpath[DEBCONF_MAX_CONFIGPATH_LEN];$/;"	m	struct:template_db
configpath	src/frontend.h	/^    char configpath[DEBCONF_MAX_CONFIGPATH_LEN];$/;"	m	struct:frontend
configuration	src/configuration.h	/^struct configuration {$/;"	s
confmodule	src/confmodule.h	/^struct confmodule {$/;"	s
confmodule	src/debconf-communicate.c	/^static struct confmodule *confmodule = NULL;$/;"	v	typeref:struct:confmodule	file:
confmodule	src/debconf.c	/^static struct confmodule *confmodule = NULL;$/;"	v	typeref:struct:confmodule	file:
confmodule_communicate	src/confmodule.c	/^static int confmodule_communicate(struct confmodule *mod)$/;"	f	file:
confmodule_delete	src/confmodule.c	/^void confmodule_delete(struct confmodule *mod)$/;"	f
confmodule_new	src/confmodule.c	/^struct confmodule *confmodule_new(struct configuration *config,$/;"	f
confmodule_process_command	src/confmodule.c	/^static char *confmodule_process_command(struct confmodule *mod, char *cmd)$/;"	f	file:
confmodule_run	src/confmodule.c	/^static pid_t confmodule_run(struct confmodule *mod, int argc, char **argv)$/;"	f	file:
confmodule_save	src/confmodule.c	/^static int confmodule_save(struct confmodule *mod)$/;"	f	file:
confmodule_shutdown	src/confmodule.c	/^static int confmodule_shutdown(struct confmodule *mod)$/;"	f	file:
confmodule_update_seen_questions	src/confmodule.c	/^static int confmodule_update_seen_questions(struct confmodule *mod, enum seen_action action)$/;"	f	file:
connect_signal_to_row	src/modules/frontend/gtk/select_handlers.c	/^static gulong connect_signal_to_row(GObject * object, const gchar * signal,$/;"	f	file:
continue_text	src/modules/frontend/newt/newt.c	/^continue_text(struct frontend *obj)$/;"	f	file:
control_path	src/dpkg-reconfigure.c	/^static char *control_path(const char *pkg, const char *script) {$/;"	f	file:
corba_boolean	src/modules/frontend/corba/corba.c	/^static int corba_boolean(struct frontend *f, struct question *q) {$/;"	f	file:
corba_go	src/modules/frontend/corba/corba.c	/^static int corba_go(struct frontend *f) {$/;"	f	file:
corba_initialize	src/modules/frontend/corba/corba.c	/^int corba_initialize(struct frontend *f, struct configuration *conf)$/;"	f
corba_multiselect	src/modules/frontend/corba/corba.c	/^static int corba_multiselect(struct frontend *f, struct question *q) {$/;"	f	file:
corba_note	src/modules/frontend/corba/corba.c	/^static int corba_note(struct frontend *f, struct question *q) {$/;"	f	file:
corba_password	src/modules/frontend/corba/corba.c	/^static int corba_password(struct frontend *f, struct question *q) {$/;"	f	file:
corba_select	src/modules/frontend/corba/corba.c	/^static int corba_select(struct frontend *f, struct question *q) {$/;"	f	file:
corba_shutdown	src/modules/frontend/corba/corba.c	/^static int corba_shutdown(struct frontend *f) {$/;"	f	file:
corba_string	src/modules/frontend/corba/corba.c	/^static int corba_string(struct frontend *f, struct question *q) {$/;"	f	file:
corba_text	src/modules/frontend/corba/corba.c	/^static int corba_text(struct frontend *f, struct question *q) {$/;"	f	file:
count	src/modules/frontend/text/text.c	/^	int count;$/;"	m	struct:choices	file:
create_action_box	src/modules/frontend/gtk/ui.c	/^static void create_action_box(struct frontend * fe, GtkWidget * container)$/;"	f	file:
create_banner	src/modules/frontend/gtk/ui.c	/^static void create_banner(struct frontend * fe, GtkWidget * container)$/;"	f	file:
create_cancel_button	src/modules/frontend/gtk/progress.c	/^static void create_cancel_button(struct progress_data * progress_data)$/;"	f	file:
create_default_buttons	src/modules/frontend/gtk/go.c	/^static void create_default_buttons(struct frontend * fe)$/;"	f	file:
create_dialog_action_box	src/modules/frontend/gtk/ui.c	/^static GtkWidget * create_dialog_action_box(struct frontend * fe,$/;"	f	file:
create_dialog_title_label	src/modules/frontend/gtk/ui.c	/^static GtkWidget * create_dialog_title_label(const gchar * title)$/;"	f	file:
create_entry_alignment	src/modules/frontend/gtk/handlers.c	/^static GtkWidget * create_entry_alignment(GtkWidget * entry)$/;"	f	file:
create_event_listener_thread	src/modules/frontend/gtk/cdebconf_gtk.c	/^static gboolean create_event_listener_thread(struct frontend * fe)$/;"	f	file:
create_frontend_data	src/modules/frontend/gtk/cdebconf_gtk.c	/^static gboolean create_frontend_data(struct frontend * fe)$/;"	f	file:
create_goback_button	src/modules/frontend/gtk/go.c	/^static void create_goback_button(struct frontend * fe)$/;"	f	file:
create_help_button	src/modules/frontend/gtk/go.c	/^static void create_help_button(struct frontend * fe)$/;"	f	file:
create_label_title	src/modules/frontend/gtk/ui.c	/^static void create_label_title(struct frontend * fe, GtkWidget * container)$/;"	f	file:
create_main_widgets	src/modules/frontend/gtk/ui.c	/^static void create_main_widgets(struct frontend * fe, GtkWidget * window)$/;"	f	file:
create_multiselect_checkboxes	src/modules/frontend/gtk/select_handlers.c	/^static int create_multiselect_checkboxes(struct frontend * fe,$/;"	f	file:
create_multiselect_list	src/modules/frontend/gtk/select_handlers.c	/^static int create_multiselect_list(struct frontend * fe,$/;"	f	file:
create_progress_bar	src/modules/frontend/gtk/progress.c	/^static void create_progress_bar(struct progress_data * progress_data,$/;"	f	file:
create_progress_box	src/modules/frontend/gtk/progress.c	/^static void create_progress_box(struct progress_data * progress_data)$/;"	f	file:
create_progress_label	src/modules/frontend/gtk/progress.c	/^static void create_progress_label(struct progress_data * progress_data,$/;"	f	file:
create_question_box	src/modules/frontend/gtk/go.c	/^static GtkWidget * create_question_box(struct frontend * fe,$/;"	f	file:
create_screenshot_path	src/modules/frontend/gtk/screenshot.c	/^static gchar * create_screenshot_path(struct question * question)$/;"	f	file:
create_select_combo	src/modules/frontend/gtk/select_handlers.c	/^static int create_select_combo(struct frontend * fe,$/;"	f	file:
create_select_list	src/modules/frontend/gtk/select_handlers.c	/^static int create_select_list(struct frontend * fe, struct question * question,$/;"	f	file:
create_target_box	src/modules/frontend/gtk/ui.c	/^static void create_target_box(struct frontend * fe, GtkWidget * container)$/;"	f	file:
data	src/database.h	/^    void *data; $/;"	m	struct:question_db
data	src/database.h	/^    void *data; $/;"	m	struct:template_db
data	src/frontend.h	/^    void *data;$/;"	m	struct:frontend
data	src/modules/db/mysql/mysql.h	/^	struct dbdata *data;$/;"	m	struct:database	typeref:struct:database::dbdata
database	src/modules/db/mysql/mysql.h	/^struct database {$/;"	s
database_module	src/modules/db/mysql/mysql.h	/^struct database_module {$/;"	s
db	src/modules/db/stack/stack.h	/^  struct question_db *db;$/;"	m	struct:question_stack	typeref:struct:question_stack::question_db
db	src/modules/db/stack/stack.h	/^  struct template_db *db;$/;"	m	struct:template_stack	typeref:struct:template_stack::template_db
dbdata	src/modules/db/mysql/mysql.h	/^struct dbdata {$/;"	s
dbh	src/modules/db/mysql/mysql.h	/^	MYSQL dbh;$/;"	m	struct:dbdata
debbuild	debian/rules	/^debbuild=debian\/build-deb$/;"	m
debconf_beginblock	src/debconfclient.h	111;"	d
debconf_capb	src/debconfclient.h	105;"	d
debconf_clear	src/debconfclient.h	99;"	d
debconf_database_module	src/modules/db/mysql/mysql.c	/^struct database_module debconf_database_module =$/;"	v	typeref:struct:database_module
debconf_database_module	src/modules/db/perldb/perldb.c	/^struct database_module debconf_database_module =$/;"	v	typeref:struct:database_module
debconf_endblock	src/debconfclient.h	114;"	d
debconf_exists	src/debconfclient.h	150;"	d
debconf_fget	src/debconfclient.h	144;"	d
debconf_frontend_module	src/modules/frontend/bogl/bogl.c	/^struct frontend_module debconf_frontend_module = {$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/corba/corba.c	/^struct frontend_module debconf_frontend_module = {$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/gtk/cdebconf_gtk.c	/^struct frontend_module debconf_frontend_module = {$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/ncurses/ncurses.c	/^struct frontend_module debconf_frontend_module =$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/newt/newt.c	/^struct frontend_module debconf_frontend_module =$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/passthrough/passthrough.c	/^struct frontend_module debconf_frontend_module =$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/slang/slang.c	/^struct frontend_module debconf_frontend_module =$/;"	v	typeref:struct:frontend_module
debconf_frontend_module	src/modules/frontend/text/text.c	/^struct frontend_module debconf_frontend_module =$/;"	v	typeref:struct:frontend_module
debconf_fset	src/debconfclient.h	147;"	d
debconf_get	src/debconfclient.h	120;"	d
debconf_go	src/debconfclient.h	117;"	d
debconf_info	src/debconfclient.h	180;"	d
debconf_input	src/debconfclient.h	96;"	d
debconf_metaget	src/debconfclient.h	141;"	d
debconf_progress_info	src/debconfclient.h	156;"	d
debconf_progress_set	src/debconfclient.h	159;"	d
debconf_progress_start	src/debconfclient.h	162;"	d
debconf_progress_step	src/debconfclient.h	165;"	d
debconf_progress_stop	src/debconfclient.h	168;"	d
debconf_purge	src/debconfclient.h	138;"	d
debconf_question_db_module	src/modules/db/http/http.c	/^struct question_db_module debconf_question_db_module = {$/;"	v	typeref:struct:question_db_module
debconf_question_db_module	src/modules/db/rfc822db/rfc822db.c	/^struct question_db_module debconf_question_db_module = {$/;"	v	typeref:struct:question_db_module
debconf_question_db_module	src/modules/db/stack/stack.c	/^struct question_db_module debconf_question_db_module = {$/;"	v	typeref:struct:question_db_module
debconf_question_db_module	src/modules/db/textdb/textdb.c	/^struct question_db_module debconf_question_db_module = {$/;"	v	typeref:struct:question_db_module
debconf_register	src/debconfclient.h	132;"	d
debconf_reset	src/debconfclient.h	126;"	d
debconf_set	src/debconfclient.h	123;"	d
debconf_settitle	src/debconfclient.h	174;"	d
debconf_stop	src/debconfclient.h	153;"	d
debconf_subst	src/debconfclient.h	129;"	d
debconf_template_db_module	src/modules/db/http/http.c	/^struct template_db_module debconf_template_db_module = {$/;"	v	typeref:struct:template_db_module
debconf_template_db_module	src/modules/db/rfc822db/rfc822db.c	/^struct template_db_module debconf_template_db_module = {$/;"	v	typeref:struct:template_db_module
debconf_template_db_module	src/modules/db/stack/stack.c	/^struct template_db_module debconf_template_db_module = {$/;"	v	typeref:struct:template_db_module
debconf_template_db_module	src/modules/db/textdb/textdb.c	/^struct template_db_module debconf_template_db_module = {$/;"	v	typeref:struct:template_db_module
debconf_title	src/debconfclient.h	108;"	d
debconf_unregister	src/debconfclient.h	135;"	d
debconf_version	src/debconfclient.h	102;"	d
debconf_x_loadtemplate	src/debconfclient.h	171;"	d
debconf_x_save	src/debconfclient.h	177;"	d
debconfclient	src/debconfclient.h	/^struct debconfclient {$/;"	s
debconfclient_command	src/debconfclient.c	/^static int debconfclient_command(struct debconfclient *client,$/;"	f	file:
debconfclient_commandf	src/debconfclient.c	/^static int debconfclient_commandf(struct debconfclient *client,$/;"	f	file:
debconfclient_delete	src/debconfclient.c	/^void debconfclient_delete(struct debconfclient *client)$/;"	f
debconfclient_handle_rsp	src/debconfclient.c	/^static int debconfclient_handle_rsp(struct debconfclient *client)$/;"	f	file:
debconfclient_init	src/debconfclient.c	/^void debconfclient_init(void)$/;"	f
debconfclient_new	src/debconfclient.c	/^struct debconfclient *debconfclient_new(void)$/;"	f
debconfclient_ret	src/debconfclient.c	/^static char *debconfclient_ret(struct debconfclient *client)$/;"	f	file:
debug	src/debconf-set-selections.c	/^static int debug = 0;$/;"	v	file:
debug	src/test/test.config	/^debug()$/;"	f
debug_printf	src/debug.c	/^void debug_printf(int level, const char *fmt, ...)$/;"	f
defaultowner	src/debconf-get-selections.c	/^static const char *defaultowner = "unknown";$/;"	v	file:
defaultval	src/template.h	/^	char *defaultval;$/;"	m	struct:template_l10n_fields
desclines	src/modules/frontend/ncurses/ncurses.c	/^	int qrylines, desclines;$/;"	m	struct:uidata	file:
description	src/template.h	/^	char *description;$/;"	m	struct:template_l10n_fields
descstart	src/modules/frontend/slang/slang.c	/^	int descstart;$/;"	m	struct:uidata	file:
descwin	src/modules/frontend/ncurses/ncurses.c	/^	WINDOW *qrywin, *descwin;$/;"	m	struct:uidata	file:
descwin	src/modules/frontend/slang/slang.c	/^	struct slwindow qrywin, descwin, progwin;$/;"	m	struct:uidata	typeref:struct:uidata::	file:
destroy_buttons	src/modules/frontend/gtk/go.c	/^static void destroy_buttons(struct frontend * fe)$/;"	f	file:
destroy_cancel_button	src/modules/frontend/gtk/progress.c	/^static void destroy_cancel_button(struct progress_data * progress_data)$/;"	f	file:
destroy_frontend_data	src/modules/frontend/gtk/cdebconf_gtk.c	/^static void destroy_frontend_data(struct frontend * fe)$/;"	f	file:
destroy_progress	src/modules/frontend/gtk/progress.c	/^static void destroy_progress(struct frontend * fe)$/;"	f	file:
destroy_progress_bar	src/modules/frontend/gtk/progress.c	/^static void destroy_progress_bar(struct progress_data * progress_data)$/;"	f	file:
destroy_progress_box	src/modules/frontend/gtk/progress.c	/^static void destroy_progress_box(struct progress_data * progress_data)$/;"	f	file:
destroy_progress_label	src/modules/frontend/gtk/progress.c	/^static void destroy_progress_label(struct progress_data * progress_data)$/;"	f	file:
di_change_font_size	src/modules/frontend/gtk/di.c	/^static void di_change_font_size(struct frontend *fe, float factor)$/;"	f	file:
di_data	src/modules/frontend/gtk/di.c	/^struct di_data {$/;"	s	file:
di_data	src/modules/frontend/gtk/fe_data.h	/^    struct di_data * di_data;$/;"	m	struct:frontend_data	typeref:struct:frontend_data::di_data
di_shortcuts	src/modules/frontend/gtk/di.c	/^static gboolean di_shortcuts(GtkWidget * widget, GdkEventKey * key,$/;"	f	file:
dirty	src/modules/db/rfc822db/rfc822db.h	/^        bool dirty;$/;"	m	struct:question_db_cache
dirty	src/modules/db/rfc822db/rfc822db.h	/^        bool dirty;$/;"	m	struct:template_db_cache
disown	src/database.h	/^    int (*disown)(struct question_db *, const char *name, const char *owner);$/;"	m	struct:question_db_module
disownall	src/database.h	/^    int (*disownall)(struct question_db *, const char *owner);$/;"	m	struct:question_db_module
do_screenshot	src/modules/frontend/gtk/screenshot.c	/^static void do_screenshot(struct frontend * fe, GtkWidget * widget)$/;"	f	file:
donecolor	src/modules/frontend/slang/slang_fe.h	/^	int donecolor;$/;"	m	struct:slwindow
drawcolor	src/modules/frontend/slang/slang_fe.h	/^	int drawcolor;$/;"	m	struct:slwindow
drawdesc	src/modules/frontend/ncurses/ncurses.c	/^static void drawdesc(struct frontend *ui, struct question *q)$/;"	f	file:
drawdescbot	src/modules/frontend/bogl/bogl.c	/^static void drawdescbot(struct frontend *ui, struct question *q)$/;"	f	file:
drawdesctop	src/modules/frontend/bogl/bogl.c	/^static void drawdesctop(struct frontend *ui, struct question *q)$/;"	f	file:
drawframe	src/modules/frontend/ncurses/ncurses.c	/^static void drawframe(struct frontend *ui, const int window, const char *title)$/;"	f	file:
drawnavbuttons	src/modules/frontend/bogl/bogl.c	/^static void drawnavbuttons(struct frontend *ui, struct question *q)$/;"	f	file:
drawnavbuttons	src/modules/frontend/ncurses/ncurses.c	/^static void drawnavbuttons(struct frontend *ui, int selected)$/;"	f	file:
dump	src/configuration.h	/^	void (*dump)(struct configuration *cfg);$/;"	m	struct:configuration
dump_question	src/modules/db/rfc822db/rfc822db.c	/^static void dump_question(struct question *q) {$/;"	f	file:
empty_fifo	src/test/entropy.config	/^empty_fifo() {$/;"	f
escape	src/debconf-escape.c	/^static int escape = 0;$/;"	v	file:
escapestr	src/strutl.c	/^char *escapestr(const char *in)$/;"	f
escapestr_frontend	src/commands.c	/^static char *escapestr_frontend(const char *in)$/;"	f	file:
ev	src/modules/frontend/corba/corba.c	/^  CORBA_Environment *ev;$/;"	m	struct:uidata	file:
event_listener	src/modules/frontend/gtk/fe_data.h	/^    GThread * event_listener;$/;"	m	struct:frontend_data
exists	src/configuration.h	/^	int (*exists)(struct configuration *cfg, const char *tag);$/;"	m	struct:configuration
exitcode	src/confmodule.h	/^	int exitcode;$/;"	m	struct:confmodule
expand_all	src/modules/frontend/gtk/select_handlers.c	/^    gboolean expand_all;$/;"	m	struct:__anon6	file:
extended_description	src/template.h	/^	char *extended_description;$/;"	m	struct:template_l10n_fields
extract	src/dpkg-preconfigure.c	/^static struct package *extract(const char *file)$/;"	f	file:
extracttemplates_available	src/dpkg-preconfigure.c	/^static int extracttemplates_available()$/;"	f	file:
fe	src/modules/frontend/gtk/progress.c	/^    struct frontend * fe;$/;"	m	struct:progress_data	typeref:struct:progress_data::frontend	file:
fe_title	src/modules/frontend/gtk/progress.c	/^    gchar * fe_title;$/;"	m	struct:progress_data	file:
fields	src/template.h	/^	struct template_l10n_fields *fields;$/;"	m	struct:__anon11	typeref:struct:__anon11::template_l10n_fields
file_exists	src/dpkg-reconfigure.c	/^static bool file_exists(const char *filename, mode_t mode)$/;"	f	file:
fillcolor	src/modules/frontend/slang/slang_fe.h	/^	int fillcolor;$/;"	m	struct:slwindow
find_external_handler	src/modules/frontend/gtk/go.c	/^static cdebconf_gtk_handler find_external_handler(struct frontend * fe,$/;"	f	file:
find_glyph	src/modules/frontend/gtk/align_text_renderer.c	/^static PangoGlyph find_glyph(GtkWidget * widget, const gchar * str)$/;"	f	file:
find_internal_handler	src/modules/frontend/gtk/go.c	/^static cdebconf_gtk_handler find_internal_handler(const char * type)$/;"	f	file:
find_renderer_glyphs	src/modules/frontend/gtk/align_text_renderer.c	/^static void find_renderer_glyphs(AlignTextRenderer * renderer, GtkWidget * widget)$/;"	f	file:
flag_value	src/question.c	/^static int flag_value(const char *type)$/;"	f	file:
flags	src/question.c	/^} flags[] = {$/;"	v	typeref:struct:__anon2	file:
flags	src/question.h	/^	unsigned int flags;$/;"	m	struct:question
focus_first_child	src/modules/frontend/gtk/select_handlers.c	/^static void focus_first_child(GtkContainer * container)$/;"	f	file:
focus_path	src/modules/frontend/gtk/select_handlers.c	/^static gboolean focus_path(GtkTreeView * view, GdkEventExpose * event,$/;"	f	file:
free_setters	src/modules/frontend/gtk/go.c	/^static void free_setters(struct frontend_data * fe_data)$/;"	f	file:
frontend	src/confmodule.h	/^	struct frontend *frontend;$/;"	m	struct:confmodule	typeref:struct:confmodule::frontend
frontend	src/debconf-communicate.c	/^static struct frontend *frontend = NULL;$/;"	v	typeref:struct:frontend	file:
frontend	src/debconf.c	/^static struct frontend *frontend = NULL;$/;"	v	typeref:struct:frontend	file:
frontend	src/frontend.h	/^struct frontend {$/;"	s
frontend_add	src/frontend.c	/^static int frontend_add(struct frontend *obj, struct question *q)$/;"	f	file:
frontend_add_noninteractive	src/frontend.c	/^static int frontend_add_noninteractive(struct frontend *obj, struct question *q)$/;"	f	file:
frontend_can_align	src/frontend.c	/^static bool frontend_can_align(struct frontend *ui, struct question *q)$/;"	f	file:
frontend_can_cancel_progress	src/frontend.c	/^static bool frontend_can_cancel_progress(struct frontend *ui)$/;"	f	file:
frontend_can_go_back	src/frontend.c	/^static bool frontend_can_go_back(struct frontend *ui, struct question *q)$/;"	f	file:
frontend_can_go_forward	src/frontend.c	/^static bool frontend_can_go_forward(struct frontend *ui, struct question *q)$/;"	f	file:
frontend_clear	src/frontend.c	/^static void frontend_clear(struct frontend *obj)$/;"	f	file:
frontend_data	src/modules/frontend/gtk/fe_data.h	/^struct frontend_data$/;"	s
frontend_data	src/modules/frontend/text/text.c	/^struct frontend_data {$/;"	s	file:
frontend_delete	src/frontend.c	/^void frontend_delete(struct frontend *obj)$/;"	f
frontend_go	src/frontend.c	/^static int frontend_go(struct frontend *obj)$/;"	f	file:
frontend_go_noninteractive	src/frontend.c	/^static int frontend_go_noninteractive(struct frontend *obj)$/;"	f	file:
frontend_info	src/frontend.c	/^static void frontend_info(struct frontend *f, struct question *info)$/;"	f	file:
frontend_initialize	src/frontend.c	/^static int frontend_initialize(struct frontend *obj, struct configuration *cfg)$/;"	f	file:
frontend_load_module	src/frontend.c	/^static const struct frontend_module *frontend_load_module(const char *modpath, const char *modname, void **dlh)$/;"	f	file:
frontend_lookup_directive	src/frontend.c	/^static const char * frontend_lookup_directive(struct frontend *obj,$/;"	f	file:
frontend_module	src/frontend.h	/^struct frontend_module {$/;"	s
frontend_new	src/frontend.c	/^struct frontend *frontend_new(struct configuration *cfg, struct template_db *tdb, struct question_db *qdb)$/;"	f
frontend_progress_info	src/frontend.c	/^static int frontend_progress_info(struct frontend *ui, struct question *info)$/;"	f	file:
frontend_progress_set	src/frontend.c	/^static int frontend_progress_set(struct frontend *ui, int val)$/;"	f	file:
frontend_progress_start	src/frontend.c	/^static void frontend_progress_start(struct frontend *ui, int min, int max, struct question *title)$/;"	f	file:
frontend_progress_step	src/frontend.c	/^static int frontend_progress_step(struct frontend *ui, int step)$/;"	f	file:
frontend_progress_stop	src/frontend.c	/^static void frontend_progress_stop(struct frontend *ui)$/;"	f	file:
frontend_qdb_set	src/frontend.c	/^int frontend_qdb_set(struct question_db *qdb, struct question *q, const char *prev)$/;"	f
frontend_query_capability	src/frontend.c	/^static unsigned long frontend_query_capability(struct frontend *f)$/;"	f	file:
frontend_set_title	src/frontend.c	/^static void frontend_set_title(struct frontend *f, const char *title)$/;"	f	file:
frontend_shutdown	src/frontend.c	/^static int frontend_shutdown(struct frontend *obj)$/;"	f	file:
func	src/modules/frontend/gtk/go.c	/^    setter_function func;$/;"	m	struct:setter	file:
g_config	src/dpkg-reconfigure.c	/^static struct configuration *g_config;$/;"	v	typeref:struct:configuration	file:
g_dpc_args	src/debconf-copydb.c	/^static struct option g_dpc_args[] = {$/;"	v	typeref:struct:option	file:
g_dpc_args	src/debconf-dumpdb.c	/^static struct option g_dpc_args[] = {$/;"	v	typeref:struct:option	file:
g_dpc_args	src/dpkg-reconfigure.c	/^struct option g_dpc_args[] = {$/;"	v	typeref:struct:option
g_frontend	src/dpkg-reconfigure.c	/^static struct frontend *g_frontend;$/;"	v	typeref:struct:frontend	file:
g_questions	src/dpkg-reconfigure.c	/^static struct question_db *g_questions;$/;"	v	typeref:struct:question_db	file:
g_templates	src/dpkg-reconfigure.c	/^static struct template_db *g_templates;$/;"	v	typeref:struct:template_db	file:
generic_handler_string	src/modules/frontend/newt/newt.c	/^generic_handler_string(struct frontend *obj, struct question *q, int eflags)$/;"	f	file:
get	src/configuration.h	/^	const char *(*get)(struct configuration *cfg, const char *tag, $/;"	m	struct:configuration
get	src/database.h	/^    struct question *(*get)(struct question_db *db, const char *name);$/;"	m	struct:question_db_module	typeref:struct:question_db_module::get
get	src/database.h	/^    struct template *(*get)(struct template_db *db, const char *name);$/;"	m	struct:template_db_module	typeref:struct:template_db_module::get
get_answer	src/modules/frontend/text/text.c	/^get_answer(char *answer, int size)$/;"	f	file:
get_background_color	src/modules/frontend/gtk/descriptions.c	/^static GdkColor * get_background_color(struct frontend * fe)$/;"	f	file:
get_full_description	src/modules/frontend/newt/newt.c	/^get_full_description(struct frontend *obj, struct question *q)$/;"	f	file:
get_gtk_theme_name	src/modules/frontend/gtk/ui.c	/^static char * get_gtk_theme_name()$/;"	f	file:
get_icon_path	src/modules/frontend/gtk/descriptions.c	/^static const char * get_icon_path(struct question * question)$/;"	f	file:
get_layout	src/modules/frontend/gtk/align_text_renderer.c	/^static PangoLayout * get_layout(AlignTextRenderer * renderer,$/;"	f	file:
get_prefix	src/modules/frontend/gtk/di.c	/^static const char * get_prefix(GLogLevelFlags log_level)$/;"	f	file:
get_question_value	src/modules/frontend/gtk/di.c	/^static gchar * get_question_value(struct frontend * fe, const char * template)$/;"	f	file:
get_special_predicate	src/modules/frontend/gtk/select_handlers.c	/^static parent_predicate get_special_predicate(const char * tag) {$/;"	f	file:
get_state	src/modules/frontend/gtk/align_text_renderer.c	/^static GtkStateType get_state(GtkCellRenderer * cell, GtkWidget * widget,$/;"	f	file:
get_text	src/modules/frontend/bogl/bogl.c	/^get_text(struct frontend *obj, const char *template, const char *fallback )$/;"	f	file:
get_text	src/modules/frontend/slang/slang.c	/^static char *get_text(struct frontend *obj, const char *template, char *fallback)$/;"	f	file:
get_text_direction	src/modules/frontend/gtk/di.c	/^static GtkTextDirection get_text_direction(struct frontend * fe)$/;"	f	file:
getallpackages	src/dpkg-reconfigure.c	/^static char *getallpackages()$/;"	f	file:
getalltriggers	src/dpkg-reconfigure.c	/^static struct package_name *getalltriggers()$/;"	f	file:
getfield	src/dpkg-reconfigure.c	/^static char *getfield(const char *package, const char *fieldname)$/;"	f	file:
getheight	src/modules/frontend/text/text.c	/^static int getheight(void)$/;"	f	file:
geti	src/configuration.h	/^	int (*geti)(struct configuration *cfg, const char *tag, $/;"	m	struct:configuration
getlanguage	src/template.c	/^static char *getlanguage(void)$/;"	f	file:
getwidth	src/modules/frontend/text/text.c	/^static int getwidth(void)$/;"	f	file:
go	src/frontend.h	/^    int (*go)(struct frontend *);$/;"	m	struct:frontend_module
go_noninteractive	src/frontend.h	/^    int (*go_noninteractive)(struct frontend *);$/;"	m	struct:frontend_module
goback_text	src/modules/frontend/newt/newt.c	/^goback_text(struct frontend *obj)$/;"	f	file:
guess_owner	src/debconf.c	/^static void guess_owner(char **argv)$/;"	f	file:
h	src/modules/frontend/slang/slang_fe.h	/^	int x, y, h, w;$/;"	m	struct:slwindow
handle	src/database.h	/^    void *handle;$/;"	m	struct:question_db
handle	src/database.h	/^    void *handle;$/;"	m	struct:template_db
handle	src/frontend.h	/^    void *handle;$/;"	m	struct:frontend
handle_all	src/modules/frontend/gtk/select_handlers.c	/^static int handle_all(struct frontend * fe, struct question * question,$/;"	f	file:
handle_boolean_radio	src/modules/frontend/gtk/handlers.c	/^static int handle_boolean_radio(struct frontend * fe,$/;"	f	file:
handle_cancel_click	src/modules/frontend/gtk/progress.c	/^static void handle_cancel_click(GtkWidget * widget,$/;"	f	file:
handle_cancel_key	src/modules/frontend/gtk/progress.c	/^static gboolean handle_cancel_key(GtkWidget * widget, GdkEventKey * key,$/;"	f	file:
handle_closed_main_window	src/modules/frontend/gtk/ui.c	/^static void handle_closed_main_window(struct frontend * fe,$/;"	f	file:
handle_cursor_changed	src/modules/frontend/gtk/select_handlers.c	/^static void handle_cursor_changed(GtkTreeView * view,$/;"	f	file:
handle_exposed_banner	src/modules/frontend/gtk/ui.c	/^static gboolean handle_exposed_banner(GtkWidget * widget,$/;"	f	file:
handle_goback_key	src/modules/frontend/gtk/go.c	/^static gboolean handle_goback_key(GtkWidget * widget, GdkEventKey * key,$/;"	f	file:
handle_gtk_events	src/modules/frontend/gtk/cdebconf_gtk.c	/^static void * handle_gtk_events(void * dummy)$/;"	f	file:
handle_help_key	src/modules/frontend/gtk/go.c	/^static gboolean handle_help_key(GtkWidget * widget, GdkEventKey * key,$/;"	f	file:
handle_right_alignment	src/modules/frontend/gtk/align_text_renderer.c	/^static void handle_right_alignment(AlignTextRenderer * renderer,$/;"	f	file:
handler	src/commands.h	/^    command_function_t handler;$/;"	m	struct:__anon10
handler	src/modules/frontend/bogl/bogl.c	/^	handler_t handler;$/;"	m	struct:question_handlers	file:
handler	src/modules/frontend/bogl/bogl.c	/^static handler_t handler(const char *type)$/;"	f	file:
handler	src/modules/frontend/corba/corba.c	/^  int (*handler)(struct frontend *f, struct question *q);$/;"	m	struct:question_handlers	file:
handler	src/modules/frontend/gtk/go.c	/^    cdebconf_gtk_handler handler;$/;"	m	struct:__anon9	file:
handler	src/modules/frontend/ncurses/ncurses.c	/^	int (*handler)(struct frontend *, struct question *q);$/;"	m	struct:question_handlers	file:
handler	src/modules/frontend/newt/newt.c	/^	newt_handler *handler;$/;"	m	struct:question_handlers	file:
handler	src/modules/frontend/slang/slang.c	/^	int (*handler)(struct frontend *, struct question *q);$/;"	m	struct:question_handlers	file:
handler	src/modules/frontend/text/text.c	/^	text_handler *handler;$/;"	m	struct:question_handlers	file:
handler	src/plugin.h	/^    void *handler;$/;"	m	struct:plugin
handler_id	src/modules/frontend/gtk/ui.c	/^    gulong handler_id;$/;"	m	struct:shortcut	file:
handler_t	src/modules/frontend/bogl/bogl.c	/^typedef int (*handler_t)(struct frontend *ui, struct question *q);$/;"	t	file:
header	src/rfc822.h	/^    char *header;$/;"	m	struct:rfc822_header
help	src/debconf-communicate.c	/^static void help(const char *exename)$/;"	f	file:
help	src/debconf-escape.c	/^static void help(FILE *f, const char *exename)$/;"	f	file:
help	src/debconf.c	/^static void help(const char *exename)$/;"	f	file:
help	src/template.h	/^	char *help;$/;"	m	struct:__anon11
help_cb_data	src/modules/frontend/newt/newt.c	/^static struct newt_help_callback_data *help_cb_data;$/;"	v	typeref:struct:newt_help_callback_data	file:
help_question	src/modules/frontend/gtk/fe_data.h	/^    struct question * help_question;$/;"	m	struct:frontend_data	typeref:struct:frontend_data::question
help_text	src/modules/frontend/newt/newt.c	/^help_text(struct frontend *obj)$/;"	f	file:
help_text_f1	src/modules/frontend/newt/newt.c	/^help_text_f1(struct frontend *obj)$/;"	f	file:
hide_expanders	src/modules/frontend/gtk/select_handlers.c	/^static void hide_expanders(GtkTreeView * view)$/;"	f	file:
http_lookup_cached_template	src/modules/db/http/http.c	/^static struct template *http_lookup_cached_template($/;"	f	file:
http_question_disown	src/modules/db/http/http.c	/^static int http_question_disown(struct question_db *db, const char *tag, $/;"	f	file:
http_question_get	src/modules/db/http/http.c	/^static struct question *http_question_get(struct question_db *db, $/;"	f	file:
http_question_initialize	src/modules/db/http/http.c	/^static int http_question_initialize(struct question_db *db, struct configuration *cfg)$/;"	f	file:
http_question_iterate	src/modules/db/http/http.c	/^static struct question *http_question_iterate(struct question_db *db,$/;"	f	file:
http_question_set	src/modules/db/http/http.c	/^static int http_question_set(struct question_db *db, struct question *q)$/;"	f	file:
http_question_shutdown	src/modules/db/http/http.c	/^static int http_question_shutdown(struct question_db *db)$/;"	f	file:
http_remove_cached_template	src/modules/db/http/http.c	/^static void http_remove_cached_template(struct template_db *db,$/;"	f	file:
http_template_get	src/modules/db/http/http.c	/^static struct template *http_template_get(struct template_db *db, $/;"	f	file:
http_template_get_real	src/modules/db/http/http.c	/^static struct template *http_template_get_real(struct template_db *db, $/;"	f	file:
http_template_initialize	src/modules/db/http/http.c	/^static int http_template_initialize(struct template_db *db, struct configuration *cfg)$/;"	f	file:
http_template_iterate	src/modules/db/http/http.c	/^static struct template *http_template_iterate(struct template_db *db,$/;"	f	file:
http_template_remove	src/modules/db/http/http.c	/^static int http_template_remove(struct template_db *db, const char *tag)$/;"	f	file:
http_template_set	src/modules/db/http/http.c	/^static int http_template_set(struct template_db *db, struct template *t)$/;"	f	file:
http_template_shutdown	src/modules/db/http/http.c	/^static int http_template_shutdown(struct template_db *db)$/;"	f	file:
icon_mapping	src/modules/frontend/gtk/descriptions.c	/^} icon_mapping[] = {$/;"	v	typeref:struct:__anon7	file:
impl_Debconf_Frontend_Boolean	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Boolean(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_Multiselect	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Multiselect(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_Note	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Note(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_Password	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Password(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_Select	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Select(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_String	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_String(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_Text	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend_Text(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend__create	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend__create(PortableServer_POA poa, CORBA_Environment * ev)$/;"	f	file:
impl_Debconf_Frontend__destroy	src/modules/frontend/corba/dcf-textimpl.c	/^impl_Debconf_Frontend__destroy(impl_POA_Debconf_Frontend * servant,$/;"	f	file:
impl_Debconf_Frontend_base_epv	src/modules/frontend/corba/dcf-textimpl.c	/^static PortableServer_ServantBase__epv impl_Debconf_Frontend_base_epv = {$/;"	v	file:
impl_Debconf_Frontend_epv	src/modules/frontend/corba/dcf-textimpl.c	/^static POA_Debconf_Frontend__epv impl_Debconf_Frontend_epv = {$/;"	v	file:
impl_Debconf_Frontend_vepv	src/modules/frontend/corba/dcf-textimpl.c	/^static POA_Debconf_Frontend__vepv impl_Debconf_Frontend_vepv = {$/;"	v	file:
impl_POA_Debconf_Frontend	src/modules/frontend/corba/dcf-textimpl.c	/^} impl_POA_Debconf_Frontend;$/;"	t	typeref:struct:__anon4	file:
increment_model_length	src/modules/frontend/gtk/choice_model.c	/^static gboolean increment_model_length(GtkTreeModel * model,$/;"	f	file:
index	src/strutl.c	/^    int index;$/;"	m	struct:__anon1	file:
indices	src/template.h	/^	char *indices;$/;"	m	struct:template_l10n_fields
infd	src/confmodule.h	/^	int infd, outfd;$/;"	m	struct:confmodule
info	src/frontend.h	/^    struct question *info;$/;"	m	struct:frontend	typeref:struct:frontend::question
info	src/frontend.h	/^    void (*info)(struct frontend *, struct question *);$/;"	m	struct:frontend_module
init_progress	src/modules/frontend/gtk/progress.c	/^static gboolean init_progress(struct frontend * fe)$/;"	f	file:
initialize	src/database.h	/^    int (*initialize)(struct question_db *db, struct configuration *cfg);$/;"	m	struct:question_db_module
initialize	src/database.h	/^    int (*initialize)(struct template_db *db, struct configuration *cfg);$/;"	m	struct:template_db_module
initialize	src/frontend.h	/^    int (*initialize)(struct frontend *, struct configuration *);$/;"	m	struct:frontend_module
initialize	src/modules/db/mysql/mysql.h	/^	void *initialize;$/;"	m	struct:database_module
insert_choice_column	src/modules/frontend/gtk/select_handlers.c	/^static void insert_choice_column(struct frontend * fe, GtkTreeView * view)$/;"	f	file:
interactive	src/frontend.h	/^    int interactive;$/;"	m	struct:frontend
is_action_box_filled	src/modules/frontend/gtk/go.c	/^static gboolean is_action_box_filled(struct frontend * fe)$/;"	f	file:
is_confmodule	src/dpkg-reconfigure.c	/^static int is_confmodule(const char *filename)$/;"	f	file:
is_disk	src/modules/frontend/gtk/select_handlers.c	/^static gboolean is_disk(int index, const char * choice,$/;"	f	file:
is_known_type	src/debconf-set-selections.c	/^static int is_known_type(const char *type)$/;"	f	file:
is_searched_value	src/modules/frontend/gtk/choice_model.c	/^static gboolean is_searched_value(GtkTreeModel * model, GtkTreePath * path,$/;"	f	file:
is_selected	src/modules/frontend/gtk/choice_model.c	/^static gboolean is_selected(GtkTreeModel * model, GtkTreePath * path,$/;"	f	file:
is_visible	src/database.h	/^    int (*is_visible)(struct question_db *, const char *name, const char *priority);$/;"	m	struct:question_db_module
iterate	src/database.h	/^    struct question *(*iterate)(struct question_db *, void **iter);$/;"	m	struct:question_db_module	typeref:struct:question_db_module::iterate
iterate	src/database.h	/^    struct template *(*iterate)(struct template_db *db, void **iter);$/;"	m	struct:template_db_module	typeref:struct:template_db_module::iterate
iterator	src/modules/db/rfc822db/rfc822db.h	/^        di_slist *iterator;$/;"	m	struct:question_db_cache
iterator	src/modules/db/rfc822db/rfc822db.h	/^        di_slist *iterator;$/;"	m	struct:template_db_cache
known_types	src/debconf-set-selections.c	/^static const char * known_types[] = {$/;"	v	file:
lang	src/template.c	/^	char *lang;$/;"	m	struct:cache_list_lang	file:
language	src/template.h	/^	char *language;$/;"	m	struct:template_l10n_fields
last_progress	src/modules/frontend/text/text.c	/^static int last_progress = PROGRESS_NONE;$/;"	v	file:
len	src/strutl.c	/^    size_t len;$/;"	m	struct:rope	file:
listdbs	src/debconf-show.c	/^int listdbs = 0;$/;"	v
listowners	src/debconf-show.c	/^int listowners = 0;$/;"	v
load	src/database.h	/^    int (*load)(struct question_db *db);$/;"	m	struct:question_db_module
load	src/database.h	/^    int (*load)(struct template_db *db);$/;"	m	struct:template_db_module
load	src/modules/db/mysql/mysql.h	/^        void *load;$/;"	m	struct:database_module
load_all_translations	src/template.c	/^bool load_all_translations(void)$/;"	f
load_answer	src/debconf-set-selections.c	/^static void load_answer(const char *owner, const char *label, const char * type,$/;"	f	file:
loadtemplate	src/test/dbtest.c	/^void loadtemplate(const char *filename, const char *owner, $/;"	f
lock	src/database.h	/^    int (*lock)(struct question_db *, const char *name);$/;"	m	struct:question_db_module
lock	src/database.h	/^    int (*lock)(struct template_db *, const char *name);$/;"	m	struct:template_db_module
log_glib_to_syslog	src/modules/frontend/gtk/di.c	/^static void log_glib_to_syslog(const gchar * log_domain,$/;"	f	file:
logo_adjusted	src/modules/frontend/gtk/fe_data.h	/^    bool logo_adjusted;$/;"	m	struct:frontend_data
logo_height	src/modules/frontend/gtk/fe_data.h	/^    int logo_height;$/;"	m	struct:frontend_data
logo_widget	src/modules/frontend/gtk/fe_data.h	/^    GtkWidget * logo_widget;$/;"	m	struct:frontend_data
logo_width	src/modules/frontend/gtk/fe_data.h	/^    int logo_width;$/;"	m	struct:frontend_data
longestlen	src/modules/frontend/ncurses/ncurses.c	/^static int longestlen(char **strs, int count)$/;"	f	file:
lookup_directive	src/frontend.h	/^    const char * (*lookup_directive)(struct frontend *, const char *);$/;"	m	struct:frontend_module
lookup_directive	src/question.c	/^static const char * lookup_directive(const char * directive, struct frontend * fe)$/;"	f	file:
lookup_function	src/strutl.h	/^typedef const char * (* lookup_function)(const char * name, void * user_data);$/;"	t
lookup_vars	src/question.c	/^static const char * lookup_vars(const char * name,$/;"	f	file:
main	src/debconf-communicate.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-copydb.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-dumpdb.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-escape.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-get-selections.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-loadtemplate.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-set-selections.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf-show.c	/^int main(int argc, char **argv)$/;"	f
main	src/debconf.c	/^int main(int argc, char **argv)$/;"	f
main	src/dpkg-preconfigure.c	/^int main(int argc, char **argv)$/;"	f
main	src/dpkg-reconfigure.c	/^int main(int argc, char **argv)$/;"	f
main	src/modules/frontend/corba/dcf-text.c	/^int main(int argc, char* argv[]) {$/;"	f
main	src/test/configtest.c	/^int main(int argc, char **argv)$/;"	f
main	src/test/dbtest.c	/^int main(int argc, char **argv)$/;"	f
make_fullscreen	src/modules/frontend/gtk/di.c	/^static void make_fullscreen(GtkWidget * window)$/;"	f	file:
make_symbol_name	src/plugin.c	/^static char *make_symbol_name(const char *name)$/;"	f	file:
merge	src/debconf-loadtemplate.c	/^static int merge = 0;$/;"	v	file:
methods	src/database.h	/^    struct question_db_module methods;$/;"	m	struct:question_db	typeref:struct:question_db::question_db_module
methods	src/database.h	/^    struct template_db_module methods;$/;"	m	struct:template_db	typeref:struct:template_db::template_db_module
methods	src/frontend.h	/^    struct frontend_module methods;$/;"	m	struct:frontend	typeref:struct:frontend::frontend_module
min_window_height	src/modules/frontend/newt/newt.c	/^min_window_height(struct frontend *obj, struct question *q, int win_width)$/;"	f	file:
modname	src/database.h	/^    char *modname;$/;"	m	struct:question_db
modname	src/database.h	/^    char *modname;$/;"	m	struct:template_db
module	src/plugin.h	/^    void *module;$/;"	m	struct:plugin
module_none	src/frontend.c	/^static const struct frontend_module module_none = { 0 };$/;"	v	typeref:struct:frontend_module	file:
mvhline	src/modules/frontend/ncurses/ncurses.c	/^static int mvhline(int r, int c, int ch, int w)$/;"	f	file:
mvvline	src/modules/frontend/ncurses/ncurses.c	/^static int mvvline(int r, int c, int ch, int h)$/;"	f	file:
mysql_initialize	src/modules/db/mysql/mysql.c	/^static int mysql_initialize(struct database *db, struct configuration *cfg)$/;"	f	file:
mysql_load	src/modules/db/mysql/mysql.c	/^static int mysql_load(struct database *db)$/;"	f	file:
mysql_question_disown	src/modules/db/mysql/mysql.c	/^static int mysql_question_disown(struct database *db, const char *tag, $/;"	f	file:
mysql_question_get	src/modules/db/mysql/mysql.c	/^static struct question *mysql_question_get(struct database *db, $/;"	f	file:
mysql_question_iterate	src/modules/db/mysql/mysql.c	/^static struct question *mysql_question_iterate(struct database *db,$/;"	f	file:
mysql_question_set	src/modules/db/mysql/mysql.c	/^static int mysql_question_set(struct database *db, struct question *q)$/;"	f	file:
mysql_runquery	src/modules/db/mysql/mysql.c	/^static MYSQL_RES *mysql_runquery(struct database *db, const char *fmt, ...)$/;"	f	file:
mysql_save	src/modules/db/mysql/mysql.c	/^static int mysql_save(struct database *db)$/;"	f	file:
mysql_shutdownmod	src/modules/db/mysql/mysql.c	/^static int mysql_shutdownmod(struct database *db)$/;"	f	file:
mysql_template_get	src/modules/db/mysql/mysql.c	/^static struct template *mysql_template_get(struct database *db, $/;"	f	file:
mysql_template_iterate	src/modules/db/mysql/mysql.c	/^static struct template *mysql_template_iterate(struct database *db,$/;"	f	file:
mysql_template_remove	src/modules/db/mysql/mysql.c	/^static int mysql_template_remove(struct database *db, const char *tag)$/;"	f	file:
mysql_template_set	src/modules/db/mysql/mysql.c	/^static int mysql_template_set(struct database *db, struct template *t)$/;"	f	file:
name	src/dpkg-preconfigure.c	/^    const char *name;$/;"	m	struct:package	file:
name	src/dpkg-reconfigure.c	/^    char *name;$/;"	m	struct:package_name	file:
name	src/frontend.h	/^    char *name;$/;"	m	struct:frontend
name	src/plugin.h	/^    char *name;$/;"	m	struct:plugin
name	src/question.c	/^    const char *name;$/;"	m	struct:__anon2	file:
nchandler_boolean	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_boolean(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_multiselect	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_multiselect(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_note	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_note(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_password	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_password(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_select	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_select(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_string	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_string(struct frontend *ui, struct question *q)$/;"	f	file:
nchandler_text	src/modules/frontend/ncurses/ncurses.c	/^static int nchandler_text(struct frontend *ui, struct question *q)$/;"	f	file:
ncurses_go	src/modules/frontend/ncurses/ncurses.c	/^static int ncurses_go(struct frontend *obj)$/;"	f	file:
ncurses_initialize	src/modules/frontend/ncurses/ncurses.c	/^static int ncurses_initialize(struct frontend *obj, struct configuration *cfg)$/;"	f	file:
ncurses_shutdown	src/modules/frontend/ncurses/ncurses.c	/^static int ncurses_shutdown(struct frontend *obj)$/;"	f	file:
need_separate_window	src/modules/frontend/newt/newt.c	/^need_separate_window(struct frontend *obj, struct question *q)$/;"	f	file:
newtAltColorPalette	src/modules/frontend/newt/newt.c	/^struct newtColors newtAltColorPalette = {$/;"	v	typeref:struct:newtColors
newt_can_align	src/modules/frontend/newt/newt.c	/^newt_can_align(struct frontend *obj, struct question *q)$/;"	f	file:
newt_can_cancel_progress	src/modules/frontend/newt/newt.c	/^newt_can_cancel_progress(struct frontend *obj)$/;"	f	file:
newt_can_go_back	src/modules/frontend/newt/newt.c	/^newt_can_go_back(struct frontend *obj, struct question *q)$/;"	f	file:
newt_data	src/modules/frontend/newt/newt.c	/^struct newt_data {$/;"	s	file:
newt_go	src/modules/frontend/newt/newt.c	/^newt_go(struct frontend *obj)$/;"	f	file:
newt_handler	src/modules/frontend/newt/newt.c	/^typedef int (newt_handler)(struct frontend *obj, struct question *q);$/;"	t	file:
newt_handler_boolean	src/modules/frontend/newt/newt.c	/^newt_handler_boolean(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_error	src/modules/frontend/newt/newt.c	/^newt_handler_error(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_multiselect	src/modules/frontend/newt/newt.c	/^newt_handler_multiselect(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_note	src/modules/frontend/newt/newt.c	/^static int newt_handler_note(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_password	src/modules/frontend/newt/newt.c	/^static int newt_handler_password(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_select	src/modules/frontend/newt/newt.c	/^newt_handler_select(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_string	src/modules/frontend/newt/newt.c	/^newt_handler_string(struct frontend *obj, struct question *q)$/;"	f	file:
newt_handler_text	src/modules/frontend/newt/newt.c	/^newt_handler_text(struct frontend *obj, struct question *q)$/;"	f	file:
newt_help_callback	src/modules/frontend/newt/newt.c	/^newt_help_callback(newtComponent co, void *d)$/;"	f	file:
newt_help_callback_data	src/modules/frontend/newt/newt.c	/^struct newt_help_callback_data {$/;"	s	file:
newt_initialize	src/modules/frontend/newt/newt.c	/^newt_initialize(struct frontend *obj, struct configuration *conf)$/;"	f	file:
newt_lookup_directive	src/modules/frontend/newt/newt.c	/^newt_lookup_directive(struct frontend *obj, const char *directive)$/;"	f	file:
newt_make_progress_bar	src/modules/frontend/newt/newt.c	/^newt_make_progress_bar(struct frontend *obj, struct question *info)$/;"	f	file:
newt_progress_info	src/modules/frontend/newt/newt.c	/^newt_progress_info(struct frontend *obj, struct question *info)$/;"	f	file:
newt_progress_set	src/modules/frontend/newt/newt.c	/^newt_progress_set(struct frontend *obj, int val)$/;"	f	file:
newt_progress_start	src/modules/frontend/newt/newt.c	/^newt_progress_start(struct frontend *obj, int min, int max,$/;"	f	file:
newt_progress_stop	src/modules/frontend/newt/newt.c	/^newt_progress_stop(struct frontend *obj)$/;"	f	file:
newt_shutdown	src/modules/frontend/newt/newt.c	/^newt_shutdown(struct frontend *obj)$/;"	f	file:
next	src/configuration.h	/^	struct configitem *parent, *child, *next;$/;"	m	struct:configitem	typeref:struct:configitem::
next	src/dpkg-preconfigure.c	/^    struct package *next;$/;"	m	struct:package	typeref:struct:package::package	file:
next	src/dpkg-preconfigure.c	/^    struct packagename *next;$/;"	m	struct:packagename	typeref:struct:packagename::packagename	file:
next	src/dpkg-reconfigure.c	/^    struct package_name *next;$/;"	m	struct:package_name	typeref:struct:package_name::package_name	file:
next	src/modules/db/stack/stack.h	/^  struct question_stack *next;$/;"	m	struct:question_stack	typeref:struct:question_stack::question_stack
next	src/modules/db/stack/stack.h	/^  struct template_stack *next;$/;"	m	struct:template_stack	typeref:struct:template_stack::template_stack
next	src/modules/frontend/gtk/go.c	/^    struct setter * next;$/;"	m	struct:setter	typeref:struct:setter::setter	file:
next	src/question.h	/^	struct question *prev, *next;$/;"	m	struct:question	typeref:struct:question::
next	src/question.h	/^	struct questionowner *next;$/;"	m	struct:questionowner	typeref:struct:questionowner::questionowner
next	src/question.h	/^	struct questionvariable *next;$/;"	m	struct:questionvariable	typeref:struct:questionvariable::questionvariable
next	src/rfc822.h	/^    struct rfc822_header *next;$/;"	m	struct:rfc822_header	typeref:struct:rfc822_header::rfc822_header
next	src/template.c	/^	struct cache_list_lang *next;$/;"	m	struct:cache_list_lang	typeref:struct:cache_list_lang::cache_list_lang	file:
next	src/template.h	/^	struct template *next;$/;"	m	struct:__anon11	typeref:struct:__anon11::
next	src/template.h	/^	struct template_l10n_fields *next;$/;"	m	struct:template_l10n_fields	typeref:struct:template_l10n_fields::template_l10n_fields
no_reload	src/dpkg-reconfigure.c	/^static int opt_all = 0, opt_force = 0, no_reload = 0;$/;"	v	file:
no_text	src/modules/frontend/newt/newt.c	/^no_text(struct frontend *obj)$/;"	f	file:
nodequestioncomp	src/modules/db/rfc822db/rfc822db.c	/^static int nodequestioncomp(const void *pa, const void *pb) {$/;"	f	file:
nodetemplatecomp	src/modules/db/rfc822db/rfc822db.c	/^static int nodetemplatecomp(const void *pa, const void *pb) {$/;"	f	file:
number_seen_questions	src/confmodule.h	/^	int number_seen_questions;$/;"	m	struct:confmodule
obj	src/modules/frontend/newt/newt.c	/^    struct frontend *obj;$/;"	m	struct:newt_help_callback_data	typeref:struct:newt_help_callback_data::frontend	file:
opt_all	src/dpkg-reconfigure.c	/^static int opt_all = 0, opt_force = 0, no_reload = 0;$/;"	v	file:
opt_force	src/dpkg-reconfigure.c	/^static int opt_all = 0, opt_force = 0, no_reload = 0;$/;"	v	file:
options	src/debconf-communicate.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/debconf-escape.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/debconf-get-selections.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/debconf-loadtemplate.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/debconf-show.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/debconf.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
options	src/dpkg-preconfigure.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
out	src/debconfclient.h	/^        FILE *out;$/;"	m	struct:debconfclient
outf	src/modules/db/rfc822db/rfc822db.c	/^static FILE *outf = NULL;$/;"	v	file:
outfd	src/confmodule.h	/^	int infd, outfd;$/;"	m	struct:confmodule
owner	src/confmodule.h	/^	const char *owner;$/;"	m	struct:confmodule
owner	src/debconf.c	/^static const char *owner;$/;"	v	file:
owner	src/question.h	/^	char *owner;$/;"	m	struct:questionowner
owners	src/question.h	/^	struct questionowner *owners;$/;"	m	struct:question	typeref:struct:question::questionowner
p	src/dpkg-preconfigure.c	/^    char *p;$/;"	m	struct:packagename	file:
package	src/dpkg-preconfigure.c	/^struct package {$/;"	s	file:
package_name	src/dpkg-reconfigure.c	/^struct package_name {$/;"	s	file:
packagename	src/dpkg-preconfigure.c	/^struct packagename {$/;"	s	file:
params	src/debconf-set-selections.c	/^static struct option params[] = {$/;"	v	typeref:struct:option	file:
parent	src/configuration.h	/^	struct configitem *parent, *child, *next;$/;"	m	struct:configitem	typeref:struct:configitem::configitem
parent	src/modules/frontend/gtk/align_text_renderer.h	/^    GtkCellRenderer parent;$/;"	m	struct:_AlignTextRenderer
parent_class	src/modules/frontend/gtk/align_text_renderer.h	/^    GtkCellRendererClass parent_class;$/;"	m	struct:_AlignTextRendererClass
parent_predicate	src/modules/frontend/gtk/choice_model.h	/^typedef gboolean (* parent_predicate)(int index, const char * choice,$/;"	t
parent_predicate	src/modules/frontend/gtk/select_handlers.c	/^    parent_predicate parent_predicate;$/;"	m	struct:__anon6	file:
parse_flags	src/modules/db/http/http.c	/^static void parse_flags(struct question *q, char *string)$/;"	f	file:
parse_flags	src/modules/db/rfc822db/rfc822db.c	/^static void parse_flags(struct question *q, char *string)$/;"	f	file:
parse_owners	src/modules/db/http/http.c	/^static void parse_owners(struct question *q, char *string)$/;"	f	file:
parse_owners	src/modules/db/rfc822db/rfc822db.c	/^static void parse_owners(struct question *q, char *string)$/;"	f	file:
parse_variables	src/modules/db/http/http.c	/^static void parse_variables(struct question *q, char *string)$/;"	f	file:
parse_variables	src/modules/db/rfc822db/rfc822db.c	/^static void parse_variables(struct question *q, char *string)$/;"	f	file:
parsecmd	src/debconf-get-selections.c	/^static void parsecmd(int argc, char **argv)$/;"	f	file:
parsecmdline	src/debconf-communicate.c	/^static void parsecmdline(struct configuration *config, int argc, char **argv)$/;"	f	file:
parsecmdline	src/debconf-escape.c	/^static void parsecmdline(int argc, char **argv)$/;"	f	file:
parsecmdline	src/debconf-loadtemplate.c	/^static void parsecmdline(struct configuration *config, int argc, char **argv)$/;"	f	file:
parsecmdline	src/debconf.c	/^static void parsecmdline(struct configuration *config, int argc, char **argv)$/;"	f	file:
passthrough_data	src/modules/frontend/passthrough/passthrough.c	/^struct passthrough_data {$/;"	s	file:
passthrough_go	src/modules/frontend/passthrough/passthrough.c	/^passthrough_go(struct frontend *obj)$/;"	f	file:
passthrough_initialize	src/modules/frontend/passthrough/passthrough.c	/^passthrough_initialize(struct frontend *obj, struct configuration *cfg)$/;"	f	file:
passthrough_progress_info	src/modules/frontend/passthrough/passthrough.c	/^passthrough_progress_info(struct frontend *obj, struct question *info)$/;"	f	file:
passthrough_progress_set	src/modules/frontend/passthrough/passthrough.c	/^passthrough_progress_set(struct frontend *obj, int val)$/;"	f	file:
passthrough_progress_start	src/modules/frontend/passthrough/passthrough.c	/^passthrough_progress_start(struct frontend *obj, int min, int max,$/;"	f	file:
passthrough_progress_step	src/modules/frontend/passthrough/passthrough.c	/^passthrough_progress_step(struct frontend *obj, int step)$/;"	f	file:
passthrough_progress_stop	src/modules/frontend/passthrough/passthrough.c	/^passthrough_progress_stop(struct frontend *obj)$/;"	f	file:
passthrough_query_capability	src/modules/frontend/passthrough/passthrough.c	/^passthrough_query_capability(struct frontend *obj)$/;"	f	file:
passthrough_set_title	src/modules/frontend/passthrough/passthrough.c	/^passthrough_set_title(struct frontend *obj, const char *title)$/;"	f	file:
passthrough_shutdown	src/modules/frontend/passthrough/passthrough.c	/^passthrough_shutdown(struct frontend *obj)$/;"	f	file:
path	src/modules/frontend/gtk/choice_model.c	/^    GtkTreePath * path;$/;"	m	struct:search_result	file:
path	src/modules/frontend/gtk/descriptions.c	/^    const char * path;$/;"	m	struct:__anon7	file:
perc_label	src/modules/frontend/newt/newt.c	/^                  perc_label;$/;"	m	struct:newt_data	file:
perldb_data	src/modules/db/perldb/perldb.h	/^struct perldb_data {$/;"	s
perldb_initialize	src/modules/db/perldb/perldb.c	/^static int perldb_initialize(struct database *db, struct configuration *cfg)$/;"	f	file:
perldb_load	src/modules/db/perldb/perldb.c	/^static int perldb_load(struct database *db)$/;"	f	file:
perldb_question_disown	src/modules/db/perldb/perldb.c	/^static int perldb_question_disown(struct database *db, const char *tag, $/;"	f	file:
perldb_question_get	src/modules/db/perldb/perldb.c	/^static struct question *perldb_question_get(struct database *db, $/;"	f	file:
perldb_question_iterate	src/modules/db/perldb/perldb.c	/^static struct question *perldb_question_iterate(struct database *db,$/;"	f	file:
perldb_question_set	src/modules/db/perldb/perldb.c	/^static int perldb_question_set(struct database *db, struct question *q)$/;"	f	file:
perldb_save	src/modules/db/perldb/perldb.c	/^static int perldb_save(struct database *db)$/;"	f	file:
perldb_shutdown	src/modules/db/perldb/perldb.c	/^static int perldb_shutdown(struct database *db)$/;"	f	file:
perldb_template_get	src/modules/db/perldb/perldb.c	/^static struct template *perldb_template_get(struct database *db, $/;"	f	file:
perldb_template_iterate	src/modules/db/perldb/perldb.c	/^static struct template *perldb_template_iterate(struct database *db,$/;"	f	file:
perldb_template_remove	src/modules/db/perldb/perldb.c	/^static int perldb_template_remove(struct database *db, const char *tag)$/;"	f	file:
perldb_template_set	src/modules/db/perldb/perldb.c	/^static int perldb_template_set(struct database *db, struct template *t)$/;"	f	file:
perlinterp	src/modules/db/perldb/perldb.c	/^static PerlInterpreter *perlinterp = 0;$/;"	v	file:
pid	src/confmodule.h	/^	pid_t pid;$/;"	m	struct:confmodule
plugin	src/plugin.h	/^struct plugin {$/;"	s
plugin_delete	src/plugin.c	/^void plugin_delete(struct plugin *plugin)$/;"	f
plugin_find	src/plugin.c	/^struct plugin *plugin_find(struct frontend *frontend, const char *name)$/;"	f
plugin_iterate	src/plugin.c	/^struct plugin *plugin_iterate(struct frontend *frontend, void **state)$/;"	f
plugin_new	src/plugin.c	/^struct plugin *plugin_new(const char *frontend, const char *filename)$/;"	f
plugin_path	src/frontend.h	/^    char *plugin_path;$/;"	m	struct:frontend
plugins	src/modules/frontend/gtk/fe_data.h	/^    GHashTable * plugins;$/;"	m	struct:frontend_data
poa	src/modules/frontend/corba/dcf-textimpl.c	/^  PortableServer_POA poa;$/;"	m	struct:__anon4	file:
popup_success	src/modules/frontend/gtk/screenshot.c	/^static void popup_success(struct frontend * fe, const gchar * screenshot_path)$/;"	f	file:
prev	src/question.h	/^	struct question *prev, *next;$/;"	m	struct:question	typeref:struct:question::question
previous_keymap	src/modules/frontend/gtk/di.c	/^    char * previous_keymap;$/;"	m	struct:di_data	file:
previous_language	src/modules/frontend/gtk/di.c	/^    char * previous_language;$/;"	m	struct:di_data	file:
previous_title	src/modules/frontend/text/text.c	/^	char *previous_title;$/;"	m	struct:frontend_data	file:
print_to_syslog	src/modules/frontend/gtk/di.c	/^static void print_to_syslog(const gchar * string)$/;"	f	file:
printlist	src/modules/frontend/text/text.c	/^printlist (struct frontend *obj, unsigned max_lines, unsigned start, struct question *q, const struct choices *choices)$/;"	f	file:
priority	src/debconf.c	/^static const char *priority;$/;"	v	file:
priority	src/question.h	/^        char *priority;$/;"	m	struct:question
priority_code	src/priority.c	/^static int priority_code(const char *p)$/;"	f	file:
priority_compare	src/priority.c	/^int priority_compare(const char *p1, const char *p2)$/;"	f
process_command	src/confmodule.h	/^    char* (*process_command)(struct confmodule *mod, char *cmd);$/;"	m	struct:confmodule
progress_bar	src/modules/frontend/gtk/progress.c	/^    GtkWidget * progress_bar;$/;"	m	struct:progress_data	file:
progress_box	src/modules/frontend/gtk/progress.c	/^    GtkWidget * progress_box;$/;"	m	struct:progress_data	file:
progress_cur	src/frontend.h	/^    int progress_min, progress_max, progress_cur;$/;"	m	struct:frontend
progress_data	src/modules/frontend/gtk/fe_data.h	/^    struct progress_data * progress_data;$/;"	m	struct:frontend_data	typeref:struct:frontend_data::progress_data
progress_data	src/modules/frontend/gtk/progress.c	/^struct progress_data {$/;"	s	file:
progress_data	src/modules/frontend/passthrough/passthrough.c	/^progress_data(struct frontend *obj, struct question *q)$/;"	f	file:
progress_info	src/frontend.h	/^    int (*progress_info)(struct frontend *fe, struct question *info);$/;"	m	struct:frontend_module
progress_label	src/modules/frontend/gtk/progress.c	/^    GtkWidget * progress_label;$/;"	m	struct:progress_data	file:
progress_max	src/frontend.h	/^    int progress_min, progress_max, progress_cur;$/;"	m	struct:frontend
progress_min	src/frontend.h	/^    int progress_min, progress_max, progress_cur;$/;"	m	struct:frontend
progress_set	src/frontend.h	/^    int (*progress_set) (struct frontend *fe, int val);$/;"	m	struct:frontend_module
progress_start	src/frontend.h	/^    void (*progress_start)(struct frontend *fe, int min, int max, struct question *title);$/;"	m	struct:frontend_module
progress_step	src/frontend.h	/^    int (*progress_step)(struct frontend *fe, int step);$/;"	m	struct:frontend_module
progress_stop	src/frontend.h	/^    void (*progress_stop)(struct frontend *fe);$/;"	m	struct:frontend_module
progress_title	src/frontend.h	/^    struct question *progress_title;$/;"	m	struct:frontend	typeref:struct:frontend::question
progwin	src/modules/frontend/slang/slang.c	/^	struct slwindow qrywin, descwin, progwin;$/;"	m	struct:uidata	typeref:struct:uidata::	file:
q_get_choices	src/question.h	12;"	d
q_get_choices_vals	src/question.h	13;"	d
q_get_description	src/question.h	11;"	d
q_get_extended_description	src/question.h	10;"	d
q_get_help	src/question.h	15;"	d
q_get_indices	src/question.h	14;"	d
q_get_raw_choices	src/question.h	18;"	d
q_get_raw_choices_vals	src/question.h	19;"	d
q_get_raw_description	src/question.h	17;"	d
q_get_raw_extended_description	src/question.h	16;"	d
q_get_raw_indices	src/question.h	20;"	d
qdb	src/frontend.h	/^    struct question_db *qdb;$/;"	m	struct:frontend	typeref:struct:frontend::question_db
qrylines	src/modules/frontend/ncurses/ncurses.c	/^	int qrylines, desclines;$/;"	m	struct:uidata	file:
qrywin	src/modules/frontend/ncurses/ncurses.c	/^	WINDOW *qrywin, *descwin;$/;"	m	struct:uidata	file:
qrywin	src/modules/frontend/slang/slang.c	/^	struct slwindow qrywin, descwin, progwin;$/;"	m	struct:uidata	typeref:struct:uidata::slwindow	file:
query_capability	src/frontend.h	/^    unsigned long (*query_capability)(struct frontend *);$/;"	m	struct:frontend_module
question	src/modules/frontend/gtk/go.c	/^    struct question * question;$/;"	m	struct:setter	typeref:struct:setter::question	file:
question	src/question.h	/^struct question {$/;"	s
question_clear_flag	src/question.c	/^void question_clear_flag(struct question *q, const char *flag)$/;"	f
question_db	src/database.h	/^struct question_db {$/;"	s
question_db_accept	src/database.c	/^static int question_db_accept(struct question_db *db,$/;"	f	file:
question_db_cache	src/modules/db/http/http.h	/^struct question_db_cache {$/;"	s
question_db_cache	src/modules/db/rfc822db/rfc822db.h	/^struct question_db_cache {$/;"	s
question_db_cache	src/modules/db/textdb/textdb.h	/^struct question_db_cache {$/;"	s
question_db_delete	src/database.c	/^void question_db_delete(struct question_db *db)$/;"	f
question_db_disown	src/database.c	/^static int question_db_disown(struct question_db *db, const char *name, $/;"	f	file:
question_db_disownall	src/database.c	/^static int question_db_disownall(struct question_db *db, const char *owner)$/;"	f	file:
question_db_get	src/database.c	/^static struct question *question_db_get(struct question_db *db, $/;"	f	file:
question_db_initialize	src/database.c	/^static int question_db_initialize(struct question_db *db, struct configuration *cfg)$/;"	f	file:
question_db_is_visible	src/database.c	/^static int question_db_is_visible(struct question_db *db, const char *name,$/;"	f	file:
question_db_iterate	src/database.c	/^static struct question *question_db_iterate(struct question_db *db,$/;"	f	file:
question_db_load	src/database.c	/^static int question_db_load(struct question_db *db)$/;"	f	file:
question_db_lock	src/database.c	/^static int question_db_lock(struct question_db *db, const char *name)$/;"	f	file:
question_db_module	src/database.h	/^struct question_db_module {$/;"	s
question_db_new	src/database.c	/^struct question_db *question_db_new(struct configuration *cfg, $/;"	f
question_db_remove	src/database.c	/^static int question_db_remove(struct question_db *db, const char *name)$/;"	f	file:
question_db_save	src/database.c	/^static int question_db_save(struct question_db *db)$/;"	f	file:
question_db_set	src/database.c	/^static int question_db_set(struct question_db *db, struct question *t)$/;"	f	file:
question_db_shutdown	src/database.c	/^static int question_db_shutdown(struct question_db *db)$/;"	f	file:
question_db_unlock	src/database.c	/^static int question_db_unlock(struct question_db *db, const char *name)$/;"	f	file:
question_delete	src/question.c	/^void question_delete(struct question *question)$/;"	f
question_deref	src/question.c	/^void question_deref(struct question *q)$/;"	f
question_disown	src/modules/db/mysql/mysql.h	/^        void *question_disown;$/;"	m	struct:database_module
question_dup	src/question.c	/^struct question *question_dup(const struct question *q)$/;"	f
question_expand_vars	src/question.c	/^static char *question_expand_vars(const struct question *q, const char *field)$/;"	f	file:
question_filename	src/modules/db/textdb/textdb.c	/^static char *question_filename(struct question_db *db, const char *tag)$/;"	f	file:
question_get	src/modules/db/mysql/mysql.h	/^        void *question_get;$/;"	m	struct:database_module
question_get_field	src/question.c	/^char * question_get_field(struct frontend * fe, const struct question * q,$/;"	f
question_get_flag	src/question.c	/^int question_get_flag(const struct question *q, const char *flag)$/;"	f
question_get_priority	src/question.c	/^const char *question_get_priority(const struct question *q)$/;"	f
question_get_raw_field	src/question.c	/^char *question_get_raw_field(const struct question *q, const char *lang,$/;"	f
question_get_tag	src/question.c	/^const char *question_get_tag(const struct question *q)$/;"	f
question_get_text	src/question.c	/^question_get_text(struct frontend *obj, const char *template, $/;"	f
question_get_variable	src/question.c	/^const char *question_get_variable(const struct question *q, const char *var)$/;"	f
question_getvalue	src/question.c	/^const char *question_getvalue(const struct question *q, const char *lang)$/;"	f
question_handlers	src/modules/frontend/bogl/bogl.c	/^static struct question_handlers question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_handlers	src/modules/frontend/bogl/bogl.c	/^struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/corba/corba.c	/^static struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/corba/corba.c	/^} question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_handlers	src/modules/frontend/gtk/go.c	/^} question_handlers[] = {$/;"	v	typeref:struct:__anon9	file:
question_handlers	src/modules/frontend/ncurses/ncurses.c	/^static struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/ncurses/ncurses.c	/^} question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_handlers	src/modules/frontend/newt/newt.c	/^static struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/newt/newt.c	/^} question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_handlers	src/modules/frontend/slang/slang.c	/^static struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/slang/slang.c	/^} question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_handlers	src/modules/frontend/text/text.c	/^static struct question_handlers {$/;"	s	file:
question_handlers	src/modules/frontend/text/text.c	/^} question_handlers[] = {$/;"	v	typeref:struct:question_handlers	file:
question_iterate	src/modules/db/mysql/mysql.h	/^        void *question_iterate;$/;"	m	struct:database_module
question_iterator	src/modules/db/rfc822db/rfc822db.c	/^static di_slist *question_iterator;$/;"	v	file:
question_new	src/question.c	/^struct question *question_new(const char *tag)$/;"	f
question_owner_add	src/question.c	/^void question_owner_add(struct question *q, const char *owner)$/;"	f
question_owner_delete	src/question.c	/^void question_owner_delete(struct question *q, const char *owner)$/;"	f
question_ref	src/question.c	/^void question_ref(struct question *q)$/;"	f
question_set	src/modules/db/mysql/mysql.h	/^        void *question_set;$/;"	m	struct:database_module
question_set_flag	src/question.c	/^void question_set_flag(struct question *q, const char *flag)$/;"	f
question_setvalue	src/question.c	/^void question_setvalue(struct question *q, const char *value)$/;"	f
question_stack	src/modules/db/stack/stack.h	/^struct question_stack {$/;"	s
question_stack_iterator	src/modules/db/stack/stack.h	/^struct question_stack_iterator {$/;"	s
question_url	src/modules/db/http/http.c	/^static char *question_url(struct question_db *db, const char *tag)$/;"	f	file:
question_variable_add	src/question.c	/^void question_variable_add(struct question *q, const char *var, 	$/;"	f
questionowner	src/question.h	/^struct questionowner {$/;"	s
questions	src/confmodule.h	/^	struct question_db *questions;$/;"	m	struct:confmodule	typeref:struct:confmodule::question_db
questions	src/debconf-communicate.c	/^static struct question_db *questions = NULL;$/;"	v	typeref:struct:question_db	file:
questions	src/debconf.c	/^static struct question_db *questions = NULL;$/;"	v	typeref:struct:question_db	file:
questions	src/frontend.h	/^    struct question *questions;$/;"	m	struct:frontend	typeref:struct:frontend::question
questions	src/modules/db/http/http.h	/^	struct question *questions;$/;"	m	struct:question_db_cache	typeref:struct:question_db_cache::question
questions	src/modules/db/perldb/perldb.h	/^	SV *questions;$/;"	m	struct:perldb_data
questions	src/modules/db/textdb/textdb.h	/^	struct question *questions;$/;"	m	struct:question_db_cache	typeref:struct:question_db_cache::question
questions_noninteractive	src/frontend.h	/^	struct question *questions_noninteractive;$/;"	m	struct:frontend	typeref:struct:frontend::question
questionvariable	src/question.h	/^struct questionvariable {$/;"	s
read	src/configuration.h	/^	int (*read)(struct configuration *cfg, const char *filename);$/;"	m	struct:configuration
readfh	src/modules/frontend/passthrough/passthrough.c	/^    FILE *readfh, *writefh;$/;"	m	struct:passthrough_data	file:
reconfigure	src/dpkg-reconfigure.c	/^static int reconfigure(char *pkg)$/;"	f	file:
ref	src/question.h	/^	unsigned int ref;$/;"	m	struct:question
ref	src/template.h	/^	unsigned int ref;$/;"	m	struct:__anon11
refresh_language	src/modules/frontend/gtk/di.c	/^static void refresh_language(struct frontend * fe)$/;"	f	file:
reload	src/database.h	/^    int (*reload)(struct template_db *db);$/;"	m	struct:template_db_module
remove	src/database.h	/^    int (*remove)(struct question_db *, const char *name);$/;"	m	struct:question_db_module
remove	src/database.h	/^    int (*remove)(struct template_db *, const char *name);$/;"	m	struct:template_db_module
remove_newlines	src/template.c	/^static void remove_newlines(char *text)$/;"	f	file:
remove_shortcut	src/modules/frontend/gtk/ui.c	/^static void remove_shortcut(GtkWidget * widget, struct shortcut * shortcut)$/;"	f	file:
ret	src/debconfclient.h	/^	char *(*ret)(struct debconfclient *client);$/;"	m	struct:debconfclient
rfc822_header	src/rfc822.h	/^struct rfc822_header {$/;"	s
rfc822_header_destroy	src/rfc822.c	/^void rfc822_header_destroy(struct rfc822_header *list)$/;"	f
rfc822_header_lookup	src/rfc822.c	/^char *rfc822_header_lookup(struct rfc822_header *list, const char* key)$/;"	f
rfc822_parse_stanza	src/rfc822.c	/^struct rfc822_header* rfc822_parse_stanza(FILE *file)$/;"	f
rfc822db_file_open	src/modules/db/rfc822db/rfc822db.c	/^static FILE *rfc822db_file_open(struct configuration *config, const char *configpath, int *retval)$/;"	f	file:
rfc822db_question_destroyitem	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_question_destroyitem(void *data)$/;"	f	file:
rfc822db_question_disown	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_disown(struct question_db *db, const char *tag, $/;"	f	file:
rfc822db_question_dump	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_question_dump(const void *node, const VISIT which, const int depth)$/;"	f	file:
rfc822db_question_get	src/modules/db/rfc822db/rfc822db.c	/^static struct question *rfc822db_question_get(struct question_db *db, $/;"	f	file:
rfc822db_question_initialize	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_initialize(struct question_db *db, struct configuration *cfg)$/;"	f	file:
rfc822db_question_iterate	src/modules/db/rfc822db/rfc822db.c	/^static struct question *rfc822db_question_iterate(struct question_db *db,$/;"	f	file:
rfc822db_question_load	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_load(struct question_db *db)$/;"	f	file:
rfc822db_question_makeiterator	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_question_makeiterator(const void *nodep, const VISIT which,$/;"	f	file:
rfc822db_question_remove	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_remove(struct question_db *db, const char *tag)$/;"	f	file:
rfc822db_question_save	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_save(struct question_db *db)$/;"	f	file:
rfc822db_question_set	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_set(struct question_db *db, struct question *question)$/;"	f	file:
rfc822db_question_shutdown	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_question_shutdown(struct question_db *db)$/;"	f	file:
rfc822db_save	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_save(const void *root, const char *path,$/;"	f	file:
rfc822db_template_destroyitem	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_template_destroyitem(void *data)$/;"	f	file:
rfc822db_template_dump	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_template_dump(const void *node, const VISIT which, const int depth)$/;"	f	file:
rfc822db_template_get	src/modules/db/rfc822db/rfc822db.c	/^static struct template *rfc822db_template_get(struct template_db *db, $/;"	f	file:
rfc822db_template_initialize	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_initialize(struct template_db *db, struct configuration *cfg)$/;"	f	file:
rfc822db_template_iterate	src/modules/db/rfc822db/rfc822db.c	/^static struct template *rfc822db_template_iterate(struct template_db *db,$/;"	f	file:
rfc822db_template_load	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_load(struct template_db *db)$/;"	f	file:
rfc822db_template_makeiterator	src/modules/db/rfc822db/rfc822db.c	/^static void rfc822db_template_makeiterator(const void *nodep, const VISIT which,$/;"	f	file:
rfc822db_template_reload	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_reload(struct template_db *db)$/;"	f	file:
rfc822db_template_remove	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_remove(struct template_db *db, const char *tag)$/;"	f	file:
rfc822db_template_save	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_save(struct template_db *db)$/;"	f	file:
rfc822db_template_set	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_set(struct template_db *db, struct template *template)$/;"	f	file:
rfc822db_template_shutdown	src/modules/db/rfc822db/rfc822db.c	/^static int rfc822db_template_shutdown(struct template_db *db)$/;"	f	file:
root	src/configuration.h	/^	struct configitem *root;$/;"	m	struct:configuration	typeref:struct:configuration::configitem
root	src/modules/db/rfc822db/rfc822db.h	/^        void *root;$/;"	m	struct:question_db_cache
root	src/modules/db/rfc822db/rfc822db.h	/^        void *root;$/;"	m	struct:template_db_cache
rope	src/strutl.c	/^struct rope {$/;"	s	file:
run	src/confmodule.h	/^	pid_t (*run)(struct confmodule *, int argc, char **argv);$/;"	m	struct:confmodule
runconfigscript	src/debconf.c	/^static void runconfigscript(int argc, char **argv)$/;"	f	file:
runconfmodule	src/dpkg-reconfigure.c	/^static int runconfmodule(const char *pkg, int argc, char **argv)$/;"	f	file:
runscript	src/dpkg-reconfigure.c	/^static int runscript (const char *pkg, const char *script, const char *param, const char *version) {$/;"	f	file:
save	src/confmodule.h	/^	int (*save)(struct confmodule *mod);$/;"	m	struct:confmodule
save	src/database.h	/^    int (*save)(struct question_db *db);$/;"	m	struct:question_db_module
save	src/database.h	/^    int (*save)(struct template_db *db);$/;"	m	struct:template_db_module
save	src/debconf-communicate.c	/^static int save()$/;"	f	file:
save	src/debconf.c	/^static int save(void)$/;"	f	file:
save	src/modules/db/mysql/mysql.h	/^        void *save;$/;"	m	struct:database_module
save_screenshot	src/modules/frontend/gtk/screenshot.c	/^static gboolean save_screenshot(GdkWindow * gdk_window,$/;"	f	file:
scale_bar	src/modules/frontend/newt/newt.c	/^                  scale_bar,$/;"	m	struct:newt_data	file:
scale_cancel	src/modules/frontend/newt/newt.c	/^                  scale_cancel,$/;"	m	struct:newt_data	file:
scale_form	src/modules/frontend/newt/newt.c	/^    newtComponent scale_form,$/;"	m	struct:newt_data	file:
scale_info	src/modules/frontend/newt/newt.c	/^    struct question *scale_info;$/;"	m	struct:newt_data	typeref:struct:newt_data::question	file:
scale_textbox	src/modules/frontend/newt/newt.c	/^                  scale_textbox,$/;"	m	struct:newt_data	file:
scale_textbox_height	src/modules/frontend/newt/newt.c	/^    int           scale_textbox_height;$/;"	m	struct:newt_data	file:
search_result	src/modules/frontend/gtk/choice_model.c	/^struct search_result {$/;"	s	file:
searched_value	src/modules/frontend/gtk/choice_model.c	/^    const char * searched_value;$/;"	m	struct:search_result	file:
seen_action	src/confmodule.h	/^enum seen_action {$/;"	g
seen_questions	src/confmodule.h	/^	char **seen_questions;$/;"	m	struct:confmodule
selected	src/modules/frontend/text/text.c	/^	char *selected;$/;"	m	struct:choices	file:
selectedcolor	src/modules/frontend/slang/slang_fe.h	/^	int selectedcolor;$/;"	m	struct:slwindow
serv	src/modules/frontend/corba/corba.c	/^  CORBA_Object *serv;$/;"	m	struct:uidata	file:
servant	src/modules/frontend/corba/dcf-textimpl.c	/^  POA_Debconf_Frontend servant;$/;"	m	struct:__anon4	file:
set	src/configuration.h	/^	void (*set)(struct configuration *cfg, const char *tag,$/;"	m	struct:configuration
set	src/database.h	/^    int (*set)(struct question_db *, struct question *q);$/;"	m	struct:question_db_module
set	src/database.h	/^    int (*set)(struct template_db *db, struct template *t);$/;"	m	struct:template_db_module
set_flag	src/debconf-set-selections.c	/^static void set_flag(const char *label, const char *flag,$/;"	f	file:
set_selected_active	src/modules/frontend/gtk/select_handlers.c	/^static void set_selected_active(GtkWidget * combo_box, GtkTreeModel * model)$/;"	f	file:
set_shortcuts	src/modules/frontend/gtk/di.c	/^static void set_shortcuts(struct frontend *fe)$/;"	f	file:
set_tab_array	src/modules/frontend/gtk/align_text_renderer.h	/^    void (* set_tab_array)(AlignTextRenderer * renderer,$/;"	m	struct:_AlignTextRendererClass
set_title	src/frontend.h	/^    void (*set_title)(struct frontend *, const char *title);$/;"	m	struct:frontend_module
set_value_from_combo	src/modules/frontend/gtk/select_handlers.c	/^static void set_value_from_combo(struct question * question,$/;"	f	file:
set_value_from_entry	src/modules/frontend/gtk/handlers.c	/^static void set_value_from_entry(struct question * question, GtkEntry * entry)$/;"	f	file:
set_value_from_multiselect	src/modules/frontend/gtk/select_handlers.c	/^static void set_value_from_multiselect(struct question * question,$/;"	f	file:
set_value_from_select	src/modules/frontend/gtk/select_handlers.c	/^static void set_value_from_select(struct question * question,$/;"	f	file:
set_value_from_toggle_button	src/modules/frontend/gtk/handlers.c	/^static void set_value_from_toggle_button(struct question * question,$/;"	f	file:
setexecfilecon	src/confmodule.c	26;"	d	file:
seti	src/configuration.h	/^	void (*seti)(struct configuration *cfg, const char *tag,$/;"	m	struct:configuration
setter	src/modules/frontend/gtk/go.c	/^struct setter {$/;"	s	file:
setter_function	src/modules/frontend/gtk/cdebconf_gtk.h	/^typedef void (* setter_function)(struct question * question,$/;"	t
setters	src/modules/frontend/gtk/fe_data.h	/^    struct setter * setters;$/;"	m	struct:frontend_data	typeref:struct:frontend_data::setter
shortcut	src/modules/frontend/gtk/ui.c	/^struct shortcut {$/;"	s	file:
should_expand_all	src/modules/frontend/gtk/select_handlers.c	/^static gboolean should_expand_all(const char * tag) {$/;"	f	file:
show_help	src/modules/frontend/text/text.c	/^show_help (struct frontend *obj, struct question *q)$/;"	f	file:
show_main_window	src/modules/frontend/gtk/cdebconf_gtk.c	/^static void show_main_window(struct frontend * fe)$/;"	f	file:
show_multiselect_window	src/modules/frontend/newt/newt.c	/^show_multiselect_window(struct frontend *obj, struct question *q, int show_ext_desc)$/;"	f	file:
show_password_text	src/modules/frontend/newt/newt.c	/^show_password_text(struct frontend *obj)$/;"	f	file:
show_select_window	src/modules/frontend/newt/newt.c	/^show_select_window(struct frontend *obj, struct question *q, int show_ext_desc)$/;"	f	file:
show_separate_window	src/modules/frontend/newt/newt.c	/^show_separate_window(struct frontend *obj, struct question *q, int is_help)$/;"	f	file:
shutdown	src/confmodule.h	/^	int (*shutdown)(struct confmodule *mod);$/;"	m	struct:confmodule
shutdown	src/database.h	/^    int (*shutdown)(struct question_db *db);$/;"	m	struct:question_db_module
shutdown	src/database.h	/^    int (*shutdown)(struct template_db *db);$/;"	m	struct:template_db_module
shutdown	src/frontend.h	/^    int (*shutdown)(struct frontend *);$/;"	m	struct:frontend_module
shutdown	src/modules/db/mysql/mysql.h	/^        void *shutdown;$/;"	m	struct:database_module
sigchld_status	src/confmodule.c	/^volatile sig_atomic_t sigchld_status = 0;$/;"	v
sighandler	src/debconf-communicate.c	/^static void sighandler(int sig)$/;"	f	file:
sighandler	src/debconf.c	/^static void sighandler(int sig)$/;"	f	file:
sighandler	src/dpkg-reconfigure.c	/^static void sighandler(int sig)$/;"	f	file:
signal_received	src/confmodule.c	/^volatile sig_atomic_t signal_received = 0;$/;"	v
slang_boolean	src/modules/frontend/slang/slang.c	/^static int slang_boolean(struct frontend *ui, struct question *q)$/;"	f	file:
slang_can_go_back	src/modules/frontend/slang/slang.c	/^static bool slang_can_go_back(struct frontend *obj, struct question *q)$/;"	f	file:
slang_drawdesc	src/modules/frontend/slang/slang.c	/^static void slang_drawdesc(struct frontend *ui, struct question *q)$/;"	f	file:
slang_drawwin	src/modules/frontend/slang/slang.c	/^static void slang_drawwin(const struct slwindow *win)$/;"	f	file:
slang_flush	src/modules/frontend/slang/slang.c	/^static void slang_flush(void)$/;"	f	file:
slang_getselect	src/modules/frontend/slang/slang.c	/^static int slang_getselect(struct frontend *ui, struct question *q, int multi)$/;"	f	file:
slang_getstring	src/modules/frontend/slang/slang.c	/^static int slang_getstring(struct frontend *ui, struct question *q, char showch)$/;"	f	file:
slang_go	src/modules/frontend/slang/slang.c	/^static int slang_go(struct frontend *obj)$/;"	f	file:
slang_initialize	src/modules/frontend/slang/slang.c	/^static int slang_initialize(struct frontend *obj, struct configuration *cfg)$/;"	f	file:
slang_initwin	src/modules/frontend/slang/slang.c	/^static void slang_initwin(struct frontend *ui, int type, struct slwindow *win)$/;"	f	file:
slang_keyhandler	src/modules/frontend/slang/slang.c	/^static int slang_keyhandler(struct frontend *ui, struct question *q, int *pos, $/;"	f	file:
slang_multiselect	src/modules/frontend/slang/slang.c	/^static int slang_multiselect(struct frontend *ui, struct question *q)$/;"	f	file:
slang_navbuttons	src/modules/frontend/slang/slang.c	/^static void slang_navbuttons(struct frontend *ui, struct question *q, $/;"	f	file:
slang_note	src/modules/frontend/slang/slang.c	/^static int slang_note(struct frontend *ui, struct question *q)$/;"	f	file:
slang_password	src/modules/frontend/slang/slang.c	/^static int slang_password(struct frontend *ui, struct question *q)$/;"	f	file:
slang_printf	src/modules/frontend/slang/slang.c	/^static void slang_printf(int r, int c, int col, char *fmt, ...)$/;"	f	file:
slang_progress_info	src/modules/frontend/slang/slang.c	/^slang_progress_info(struct frontend *obj, struct question *info)$/;"	f	file:
slang_progress_set	src/modules/frontend/slang/slang.c	/^slang_progress_set(struct frontend *obj, int val)$/;"	f	file:
slang_progress_start	src/modules/frontend/slang/slang.c	/^slang_progress_start(struct frontend *obj, int min, int max, struct question *title)$/;"	f	file:
slang_progress_stop	src/modules/frontend/slang/slang.c	/^slang_progress_stop(struct frontend *obj)$/;"	f	file:
slang_select	src/modules/frontend/slang/slang.c	/^static int slang_select(struct frontend *ui, struct question *q)$/;"	f	file:
slang_setcolor	src/modules/frontend/slang/slang.c	/^static void slang_setcolor(struct frontend *ui, int *handle, const char *obj, $/;"	f	file:
slang_shutdown	src/modules/frontend/slang/slang.c	/^static int slang_shutdown(struct frontend *obj)$/;"	f	file:
slang_string	src/modules/frontend/slang/slang.c	/^static int slang_string(struct frontend *ui, struct question *q)$/;"	f	file:
slang_text	src/modules/frontend/slang/slang.c	/^static int slang_text(struct frontend *ui, struct question *q)$/;"	f	file:
slang_wrapprint	src/modules/frontend/slang/slang.c	/^static void slang_wrapprint(struct slwindow *win, const char *str, int start)$/;"	f	file:
slwindow	src/modules/frontend/slang/slang_fe.h	/^struct slwindow {$/;"	s
sort_str_t	src/strutl.c	/^} sort_str_t;$/;"	t	typeref:struct:__anon1	file:
special_questions	src/modules/frontend/gtk/select_handlers.c	/^} special_questions[] = {$/;"	v	typeref:struct:__anon6	file:
stack	src/modules/db/stack/stack.h	/^  struct question_stack *stack;$/;"	m	struct:question_stack_iterator	typeref:struct:question_stack_iterator::question_stack
stack	src/modules/db/stack/stack.h	/^  struct template_stack *stack;$/;"	m	struct:template_stack_iterator	typeref:struct:template_stack_iterator::template_stack
stack_question_db_disown	src/modules/db/stack/stack.c	/^static int stack_question_db_disown(struct question_db *db, const char *name, $/;"	f	file:
stack_question_db_disownall	src/modules/db/stack/stack.c	/^static int stack_question_db_disownall(struct question_db *db, const char *owner)$/;"	f	file:
stack_question_db_get	src/modules/db/stack/stack.c	/^static struct question *stack_question_db_get(struct question_db *db, $/;"	f	file:
stack_question_db_initialize	src/modules/db/stack/stack.c	/^static int stack_question_db_initialize(struct question_db *db, struct configuration *cfg)$/;"	f	file:
stack_question_db_iterate	src/modules/db/stack/stack.c	/^static struct question *stack_question_db_iterate(struct question_db *db, $/;"	f	file:
stack_question_db_load	src/modules/db/stack/stack.c	/^static int stack_question_db_load(struct question_db *db)$/;"	f	file:
stack_question_db_lock	src/modules/db/stack/stack.c	/^static int stack_question_db_lock(struct question_db *db, const char *name)$/;"	f	file:
stack_question_db_remove	src/modules/db/stack/stack.c	/^static int stack_question_db_remove(struct question_db *db, const char *name)$/;"	f	file:
stack_question_db_save	src/modules/db/stack/stack.c	/^static int stack_question_db_save(struct question_db *db)$/;"	f	file:
stack_question_db_set	src/modules/db/stack/stack.c	/^static int stack_question_db_set(struct question_db *db, struct question *t) {$/;"	f	file:
stack_question_db_shutdown	src/modules/db/stack/stack.c	/^static int stack_question_db_shutdown(struct question_db *db)$/;"	f	file:
stack_question_db_unlock	src/modules/db/stack/stack.c	/^static int stack_question_db_unlock(struct question_db *db, const char *name)$/;"	f	file:
stack_template_db_get	src/modules/db/stack/stack.c	/^static struct template *stack_template_db_get(struct template_db *db, $/;"	f	file:
stack_template_db_initialize	src/modules/db/stack/stack.c	/^static int stack_template_db_initialize(struct template_db *db, struct configuration *cfg)$/;"	f	file:
stack_template_db_iterate	src/modules/db/stack/stack.c	/^static struct template *stack_template_db_iterate(struct template_db *db, $/;"	f	file:
stack_template_db_load	src/modules/db/stack/stack.c	/^static int stack_template_db_load(struct template_db *db) {$/;"	f	file:
stack_template_db_lock	src/modules/db/stack/stack.c	/^static int stack_template_db_lock(struct template_db *db, const char *name)$/;"	f	file:
stack_template_db_reload	src/modules/db/stack/stack.c	/^static int stack_template_db_reload(struct template_db *db) {$/;"	f	file:
stack_template_db_remove	src/modules/db/stack/stack.c	/^static int stack_template_db_remove(struct template_db *db, const char *name)$/;"	f	file:
stack_template_db_save	src/modules/db/stack/stack.c	/^static int stack_template_db_save(struct template_db *db) {$/;"	f	file:
stack_template_db_set	src/modules/db/stack/stack.c	/^static int stack_template_db_set(struct template_db *db, struct template *t)$/;"	f	file:
stack_template_db_shutdown	src/modules/db/stack/stack.c	/^static int stack_template_db_shutdown(struct template_db *db)$/;"	f	file:
stack_template_db_unlock	src/modules/db/stack/stack.c	/^static int stack_template_db_unlock(struct template_db *db, const char *name)$/;"	f	file:
str	src/strutl.c	/^    const char * str;$/;"	m	struct:rope	file:
stralign	src/strutl.c	/^int stralign(char **strs, int count)$/;"	f
strchoicesplit	src/strutl.c	/^int strchoicesplit(const char *inbuf, char **argv, size_t maxnarg)$/;"	f
strchoicesplitsort	src/strutl.c	/^int strchoicesplitsort(const char *origbuf, const char *transbuf, const char *indices, char **oargv, char **targv, int *oindex, size_t maxnarg)$/;"	f
strcmdsplit	src/strutl.c	/^int strcmdsplit(char *inbuf, char **argv, size_t maxnarg)$/;"	f
strcountcmp	src/strutl.c	/^int strcountcmp(const char *s1, const char *e1, const char *s2, const char *e2)$/;"	f
strescape	src/strutl.c	/^void strescape(const char *inbuf, char *outbuf, const size_t maxlen, const int mode)$/;"	f
strexpand	src/strutl.c	/^char * strexpand(const char * src, lookup_function func, void * user_data)$/;"	f
strgetargc	src/strutl.c	/^int strgetargc(const char *inbuf)$/;"	f
string	src/strutl.c	/^    char *string;$/;"	m	struct:__anon1	file:
strjoin	src/strutl.c	/^char *strjoin(const char *sep, ...)$/;"	f
strjoinv	src/strutl.c	/^char *strjoinv(const char *sep, va_list ap)$/;"	f
strlenmunge	src/debconf-set-selections.c	/^static size_t strlenmunge(char *buf, int *line)$/;"	f	file:
strlongest	src/strutl.c	/^int strlongest(char **strs, int count)$/;"	f
strlower	src/strutl.c	/^char *strlower(char *buf)$/;"	f
strpad	src/strutl.c	/^strpad (char *what, size_t maxsize)$/;"	f
strparsecword	src/strutl.c	/^int strparsecword(char **inbuf, char *outbuf, size_t maxlen)$/;"	f
strparsequoteword	src/strutl.c	/^int strparsequoteword(char **inbuf, char *outbuf, size_t maxlen)$/;"	f
strreplace	src/strutl.c	/^char *strreplace(const char *src, const char *from, const char *to)$/;"	f
strstrip	src/strutl.c	/^char *strstrip(char *buf)$/;"	f
strtruncate	src/strutl.c	/^strtruncate (char *what, size_t maxsize)$/;"	f
strunescape	src/strutl.c	/^void strunescape(const char *inbuf, char *outbuf, const size_t maxlen, const int mode)$/;"	f
strvacat	src/strutl.c	/^void strvacat(char *buf, size_t maxlen, ...)$/;"	f
strwidth	src/strutl.c	/^strwidth (const char *what)$/;"	f
strwrap	src/strutl.c	/^int strwrap(const char *str, const int width, char *lines[], int maxlines)$/;"	f
tab_array	src/modules/frontend/gtk/align_text_renderer.h	/^    PangoTabArray * tab_array;$/;"	m	struct:_AlignTextRenderer
tab_array	src/modules/frontend/gtk/select_handlers.c	/^    PangoTabArray * tab_array;$/;"	m	struct:adjust_data	file:
tag	src/configuration.h	/^	char *tag;$/;"	m	struct:configitem
tag	src/modules/frontend/gtk/select_handlers.c	/^    const char * tag;$/;"	m	struct:__anon6	file:
tag	src/modules/frontend/newt/newt.c	/^    const char *tag;$/;"	m	struct:newt_help_callback_data	file:
tag	src/question.h	/^	char *tag;$/;"	m	struct:question
tag	src/template.h	/^	char *tag;$/;"	m	struct:__anon11
talk	src/modules/frontend/passthrough/passthrough.c	/^talk(struct frontend *obj, char **value, ...)$/;"	f	file:
target_box	src/modules/frontend/gtk/fe_data.h	/^    GtkWidget * target_box;$/;"	m	struct:frontend_data
tdb	src/database.h	/^    struct template_db *tdb;$/;"	m	struct:question_db	typeref:struct:question_db::template_db
tdb	src/frontend.h	/^    struct template_db *tdb;$/;"	m	struct:frontend	typeref:struct:frontend::template_db
template_cur_l10n_fields	src/template.c	/^static struct template_l10n_fields *template_cur_l10n_fields(const struct template *t,$/;"	f	file:
template_db	src/database.h	/^struct template_db {$/;"	s
template_db_accept	src/database.c	/^static int template_db_accept(struct template_db *db,$/;"	f	file:
template_db_cache	src/modules/db/http/http.h	/^struct template_db_cache {$/;"	s
template_db_cache	src/modules/db/rfc822db/rfc822db.h	/^struct template_db_cache {$/;"	s
template_db_cache	src/modules/db/textdb/textdb.h	/^struct template_db_cache {$/;"	s
template_db_delete	src/database.c	/^void template_db_delete(struct template_db *db)$/;"	f
template_db_get	src/database.c	/^static struct template *template_db_get(struct template_db *db, $/;"	f	file:
template_db_initialize	src/database.c	/^static int template_db_initialize(struct template_db *db, struct configuration *cfg)$/;"	f	file:
template_db_iterate	src/database.c	/^static struct template *template_db_iterate(struct template_db *db, $/;"	f	file:
template_db_load	src/database.c	/^static int template_db_load(struct template_db *db)$/;"	f	file:
template_db_loadfile	src/database.c	/^void template_db_loadfile(struct template_db *tdb, struct question_db *qdb, const char *filename, const char *owner, int flags)$/;"	f
template_db_lock	src/database.c	/^static int template_db_lock(struct template_db *db, const char *name)$/;"	f	file:
template_db_module	src/database.h	/^struct template_db_module {$/;"	s
template_db_new	src/database.c	/^struct template_db *template_db_new(struct configuration *cfg,$/;"	f
template_db_reload	src/database.c	/^static int template_db_reload(struct template_db *db)$/;"	f	file:
template_db_remove	src/database.c	/^static int template_db_remove(struct template_db *db, const char *name)$/;"	f	file:
template_db_save	src/database.c	/^static int template_db_save(struct template_db *db)$/;"	f	file:
template_db_set	src/database.c	/^static int template_db_set(struct template_db *db, struct template *t)$/;"	f	file:
template_db_shutdown	src/database.c	/^static int template_db_shutdown(struct template_db *db)$/;"	f	file:
template_db_unlock	src/database.c	/^static int template_db_unlock(struct template_db *db, const char *name)$/;"	f	file:
template_delete	src/template.c	/^void template_delete(struct template *t)$/;"	f
template_deref	src/template.c	/^void template_deref(struct template *t)$/;"	f
template_dup	src/template.c	/^struct template *template_dup(const struct template *t)$/;"	f
template_field_get	src/template.c	/^static const char *template_field_get(const struct template_l10n_fields *p,$/;"	f	file:
template_field_set	src/template.c	/^static void template_field_set(struct template_l10n_fields *p,$/;"	f	file:
template_fields_list	src/template.c	/^const char *template_fields_list[] = {$/;"	v
template_filename	src/modules/db/textdb/textdb.c	/^static char *template_filename(struct template_db *db, const char *tag)$/;"	f	file:
template_get	src/modules/db/mysql/mysql.h	/^        void *template_get;$/;"	m	struct:database_module
template_get_internal	src/template.c	/^static const char *template_get_internal(const struct template *t,$/;"	f	file:
template_iterate	src/modules/db/mysql/mysql.h	/^        void *template_iterate;$/;"	m	struct:database_module
template_iterator	src/modules/db/rfc822db/rfc822db.c	/^static di_slist *template_iterator;$/;"	v	file:
template_l10n_fields	src/template.h	/^struct template_l10n_fields$/;"	s
template_l10nclear	src/template.c	/^void template_l10nclear(struct template *t)$/;"	f
template_l10nmerge	src/template.c	/^struct template *template_l10nmerge(struct template *ret, const struct template *t)$/;"	f
template_lget	src/template.c	/^const char *template_lget(const struct template *t,$/;"	f
template_load	src/template.c	/^struct template *template_load(const char *filename)$/;"	f
template_lset	src/template.c	/^void template_lset(struct template *t, const char *lang,$/;"	f
template_new	src/template.c	/^struct template *template_new(const char *tag)$/;"	f
template_next_lang	src/template.c	/^const char *template_next_lang(const struct template *t, const char *lang)$/;"	f
template_ref	src/template.c	/^void template_ref(struct template *t)$/;"	f
template_remove	src/modules/db/mysql/mysql.h	/^        void *template_remove;$/;"	m	struct:database_module
template_set	src/modules/db/mysql/mysql.h	/^        void *template_set;$/;"	m	struct:database_module
template_stack	src/modules/db/stack/stack.h	/^struct template_stack {$/;"	s
template_stack_iterator	src/modules/db/stack/stack.h	/^struct template_stack_iterator {$/;"	s
template_url	src/modules/db/http/http.c	/^static char *template_url(struct template_db *db, const char *tag)$/;"	f	file:
templatedb	src/debconf-get-selections.c	/^static const char *templatedb = NULL;$/;"	v	file:
templatefile	src/dpkg-preconfigure.c	/^    const char *templatefile;$/;"	m	struct:package	file:
templates	src/confmodule.h	/^	struct template_db *templates;$/;"	m	struct:confmodule	typeref:struct:confmodule::template_db
templates	src/debconf-communicate.c	/^static struct template_db *templates = NULL;$/;"	v	typeref:struct:template_db	file:
templates	src/debconf.c	/^static struct template_db *templates = NULL;$/;"	v	typeref:struct:template_db	file:
templates	src/modules/db/http/http.h	/^	struct template *templates;$/;"	m	struct:template_db_cache	typeref:struct:template_db_cache::
templates	src/modules/db/perldb/perldb.h	/^	SV *templates;$/;"	m	struct:perldb_data
templates	src/modules/db/textdb/textdb.h	/^	struct template *templates;$/;"	m	struct:template_db_cache	typeref:struct:template_db_cache::
text	src/modules/frontend/gtk/align_text_renderer.h	/^    gchar * text;$/;"	m	struct:_AlignTextRenderer
text_can_align	src/modules/frontend/text/text.c	/^text_can_align(struct frontend *obj, struct question *q)$/;"	f	file:
text_can_go_back	src/modules/frontend/text/text.c	/^text_can_go_back(struct frontend *obj, struct question *q)$/;"	f	file:
text_go	src/modules/frontend/text/text.c	/^static int text_go(struct frontend *obj)$/;"	f	file:
text_handler	src/modules/frontend/text/text.c	/^typedef int (text_handler)(struct frontend *obj, unsigned printed, struct question *q);$/;"	t	file:
text_handler_boolean	src/modules/frontend/text/text.c	/^static int text_handler_boolean(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_displaydesc	src/modules/frontend/text/text.c	/^static unsigned text_handler_displaydesc(struct frontend *obj, unsigned printed, struct question *q) $/;"	f	file:
text_handler_error	src/modules/frontend/text/text.c	/^static int text_handler_error(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_multiselect	src/modules/frontend/text/text.c	/^static int text_handler_multiselect(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_note	src/modules/frontend/text/text.c	/^static int text_handler_note(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_password	src/modules/frontend/text/text.c	/^static int text_handler_password(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_select	src/modules/frontend/text/text.c	/^static int text_handler_select(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_string	src/modules/frontend/text/text.c	/^static int text_handler_string(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_handler_text	src/modules/frontend/text/text.c	/^static int text_handler_text(struct frontend *obj, unsigned printed, struct question *q)$/;"	f	file:
text_initialize	src/modules/frontend/text/text.c	/^static int text_initialize(struct frontend *obj, struct configuration *conf)$/;"	f	file:
text_lookup_directive	src/modules/frontend/text/text.c	/^text_lookup_directive(struct frontend *obj, const char *directive)$/;"	f	file:
text_progress_set	src/modules/frontend/text/text.c	/^static int text_progress_set(struct frontend *obj, int val)$/;"	f	file:
text_progress_start	src/modules/frontend/text/text.c	/^static void text_progress_start(struct frontend *obj, int min, int max, struct question *title)$/;"	f	file:
text_progress_stop	src/modules/frontend/text/text.c	/^static void text_progress_stop(struct frontend *obj)$/;"	f	file:
text_shutdown	src/modules/frontend/text/text.c	/^static int text_shutdown(struct frontend *obj)$/;"	f	file:
textdb_lookup_cached_template	src/modules/db/textdb/textdb.c	/^static struct template *textdb_lookup_cached_template($/;"	f	file:
textdb_question_disown	src/modules/db/textdb/textdb.c	/^static int textdb_question_disown(struct question_db *db, const char *tag, $/;"	f	file:
textdb_question_get	src/modules/db/textdb/textdb.c	/^static struct question *textdb_question_get(struct question_db *db, $/;"	f	file:
textdb_question_initialize	src/modules/db/textdb/textdb.c	/^static int textdb_question_initialize(struct question_db *db, struct configuration *cfg)$/;"	f	file:
textdb_question_iterate	src/modules/db/textdb/textdb.c	/^static struct question *textdb_question_iterate(struct question_db *db,$/;"	f	file:
textdb_question_remove	src/modules/db/textdb/textdb.c	/^static int textdb_question_remove(struct question_db *db, const char *tag)$/;"	f	file:
textdb_question_set	src/modules/db/textdb/textdb.c	/^static int textdb_question_set(struct question_db *db, struct question *q)$/;"	f	file:
textdb_question_shutdown	src/modules/db/textdb/textdb.c	/^static int textdb_question_shutdown(struct question_db *db)$/;"	f	file:
textdb_remove_cached_template	src/modules/db/textdb/textdb.c	/^static void textdb_remove_cached_template(struct template_db *db,$/;"	f	file:
textdb_template_get	src/modules/db/textdb/textdb.c	/^static struct template *textdb_template_get(struct template_db *db, $/;"	f	file:
textdb_template_get_real	src/modules/db/textdb/textdb.c	/^static struct template *textdb_template_get_real(struct template_db *db, $/;"	f	file:
textdb_template_initialize	src/modules/db/textdb/textdb.c	/^static int textdb_template_initialize(struct template_db *db, struct configuration *cfg)$/;"	f	file:
textdb_template_iterate	src/modules/db/textdb/textdb.c	/^static struct template *textdb_template_iterate(struct template_db *db,$/;"	f	file:
textdb_template_remove	src/modules/db/textdb/textdb.c	/^static int textdb_template_remove(struct template_db *db, const char *tag)$/;"	f	file:
textdb_template_set	src/modules/db/textdb/textdb.c	/^static int textdb_template_set(struct template_db *db, struct template *t)$/;"	f	file:
textdb_template_shutdown	src/modules/db/textdb/textdb.c	/^static int textdb_template_shutdown(struct template_db *db)$/;"	f	file:
tindex	src/modules/frontend/text/text.c	/^	int *tindex;$/;"	m	struct:choices	file:
title	src/frontend.h	/^    char *title;$/;"	m	struct:frontend
title	src/modules/frontend/gtk/fe_data.h	/^    GtkWidget * title;$/;"	m	struct:frontend_data
title	src/modules/frontend/slang/slang_fe.h	/^	char *title;$/;"	m	struct:slwindow
translate_tag_name	src/modules/db/http/http.c	/^static char *translate_tag_name(const char *buf)$/;"	f	file:
translate_tag_name	src/modules/db/textdb/textdb.c	/^static void translate_tag_name(char *buf)$/;"	f	file:
tree	src/configuration.h	/^	struct configitem *(*tree)(struct configuration *cfg, $/;"	m	struct:configuration	typeref:struct:configuration::tree
type	src/modules/frontend/bogl/bogl.c	/^	const char *type;$/;"	m	struct:question_handlers	file:
type	src/modules/frontend/corba/corba.c	/^  const char *type;$/;"	m	struct:question_handlers	file:
type	src/modules/frontend/gtk/descriptions.c	/^    const char * type;$/;"	m	struct:__anon7	file:
type	src/modules/frontend/gtk/go.c	/^    const char * type;$/;"	m	struct:__anon9	file:
type	src/modules/frontend/ncurses/ncurses.c	/^	const char *type;$/;"	m	struct:question_handlers	file:
type	src/modules/frontend/newt/newt.c	/^	const char *type;$/;"	m	struct:question_handlers	file:
type	src/modules/frontend/slang/slang.c	/^	const char *type;$/;"	m	struct:question_handlers	file:
type	src/modules/frontend/text/text.c	/^	const char *type;$/;"	m	struct:question_handlers	file:
type	src/template.h	/^	char *type;$/;"	m	struct:__anon11
udebbuild	debian/rules	/^udebbuild=debian\/build-udeb$/;"	m
uidata	src/modules/frontend/bogl/bogl.c	/^struct uidata {$/;"	s	file:
uidata	src/modules/frontend/corba/corba.c	/^struct uidata {$/;"	s	file:
uidata	src/modules/frontend/ncurses/ncurses.c	/^struct uidata {$/;"	s	file:
uidata	src/modules/frontend/slang/slang.c	/^struct uidata {$/;"	s	file:
unescape	src/debconf-escape.c	/^static int unescape = 0;$/;"	v	file:
unescapestr	src/strutl.c	/^char *unescapestr(const char *in)$/;"	f
unlock	src/database.h	/^    int (*unlock)(struct question_db *, const char *name);$/;"	m	struct:question_db_module
unlock	src/database.h	/^    int (*unlock)(struct template_db *, const char *name);$/;"	m	struct:template_db_module
unseen	src/debconf-set-selections.c	/^static int unseen = 0;$/;"	v	file:
update_model_from_toggle_button	src/modules/frontend/gtk/select_handlers.c	/^static void update_model_from_toggle_button($/;"	f	file:
update_progress_bar	src/modules/frontend/gtk/progress.c	/^static void update_progress_bar(struct frontend * fe, gdouble fraction)$/;"	f	file:
update_question_database	src/modules/frontend/gtk/go.c	/^static void update_question_database(struct frontend * fe)$/;"	f	file:
update_seen_questions	src/confmodule.h	/^	int (*update_seen_questions)(struct confmodule *mod, enum seen_action action);$/;"	m	struct:confmodule
update_selection_for_toggle	src/modules/frontend/gtk/select_handlers.c	/^static void update_selection_for_toggle(GtkCellRendererToggle * cell,$/;"	f	file:
usage	src/debconf-copydb.c	/^static void usage(const char *exename)$/;"	f	file:
usage	src/debconf-dumpdb.c	/^static void usage(const char *exename)$/;"	f	file:
usage	src/debconf-loadtemplate.c	/^static void usage(char *progname, int rc)$/;"	f	file:
usage	src/debconf-set-selections.c	/^static void usage(const char *exename)$/;"	f	file:
usage	src/debconf-show.c	/^static void usage(const char *exename)$/;"	f	file:
usage	src/dpkg-preconfigure.c	/^static void usage(const char *exename)$/;"	f	file:
usage	src/dpkg-reconfigure.c	/^static void usage(void)$/;"	f	file:
user_data	src/modules/frontend/gtk/go.c	/^    void * user_data;$/;"	m	struct:setter	file:
value	src/configuration.h	/^	char *value;$/;"	m	struct:configitem
value	src/debconfclient.h	/^	char *value;$/;"	m	struct:debconfclient
value	src/question.c	/^    unsigned int value;$/;"	m	struct:__anon2	file:
value	src/question.h	/^	char *value;$/;"	m	struct:question
value	src/question.h	/^	char *value;$/;"	m	struct:questionvariable
value	src/rfc822.h	/^    char *value;$/;"	m	struct:rfc822_header
variable	src/question.h	/^	char *variable;$/;"	m	struct:questionvariable
variables	src/question.h	/^	struct questionvariable *variables;$/;"	m	struct:question	typeref:struct:question::questionvariable
version	src/dpkg-preconfigure.c	/^    char *version;$/;"	m	struct:package	file:
w	src/modules/frontend/slang/slang_fe.h	/^	int x, y, h, w;$/;"	m	struct:slwindow
wait_answer	src/modules/frontend/gtk/go.c	/^static void wait_answer(struct frontend * fe)$/;"	f	file:
wfill	src/modules/frontend/ncurses/ncurses.c	/^static void wfill(WINDOW *w)$/;"	f	file:
widget	src/modules/frontend/gtk/select_handlers.c	/^    GtkWidget * widget;$/;"	m	struct:adjust_data	file:
window	src/modules/frontend/gtk/fe_data.h	/^    GtkWidget * window;$/;"	m	struct:frontend_data
window	src/modules/frontend/gtk/ui.c	/^    GtkWidget * window;$/;"	m	struct:shortcut	file:
wrap_print	src/modules/frontend/text/text.c	/^static unsigned wrap_print(const char *str)$/;"	f	file:
wrapprint	src/modules/frontend/ncurses/ncurses.c	/^static int wrapprint(WINDOW *win, const char *str, int ystart, const int width)$/;"	f	file:
writefh	src/modules/frontend/passthrough/passthrough.c	/^    FILE *readfh, *writefh;$/;"	m	struct:passthrough_data	file:
x	src/modules/frontend/slang/slang_fe.h	/^	int x, y, h, w;$/;"	m	struct:slwindow
y	src/modules/frontend/slang/slang_fe.h	/^	int x, y, h, w;$/;"	m	struct:slwindow
yes_text	src/modules/frontend/newt/newt.c	/^yes_text(struct frontend *obj)$/;"	f	file:
